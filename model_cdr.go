/*
OCPI CDRs module

Specification for OCPIs CDRs handlers

API version: 2.2.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package OCPI

import (
	"encoding/json"
)

// checks if the Cdr type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Cdr{}

// Cdr struct for Cdr
type Cdr struct {
	CountryCode string `json:"country_code"`
	PartyId string `json:"party_id"`
	Id string `json:"id"`
	StartDateTime string `json:"start_date_time"`
	EndDateTime string `json:"end_date_time"`
	SessionId *string `json:"session_id,omitempty"`
	CdrToken CdrCdrToken `json:"cdr_token"`
	AuthMethod string `json:"auth_method"`
	AuthorizationReference *string `json:"authorization_reference,omitempty"`
	CdrLocation CdrCdrLocation `json:"cdr_location"`
	MeterId *string `json:"meter_id,omitempty"`
	Currency string `json:"currency"`
	Tariffs *CdrTariffs `json:"tariffs,omitempty"`
	ChargingPeriods *CdrChargingPeriods `json:"charging_periods,omitempty"`
	SignedData *CdrSignedData `json:"signed_data,omitempty"`
	TotalCost Price `json:"total_cost"`
	TotalFixedCost *Price `json:"total_fixed_cost,omitempty"`
	TotalEnergy float32 `json:"total_energy"`
	TotalEnergyCost *Price `json:"total_energy_cost,omitempty"`
	TotalTime float32 `json:"total_time"`
	TotalTimeCost *Price `json:"total_time_cost,omitempty"`
	TotalParkingTime *float32 `json:"total_parking_time,omitempty"`
	TotalParkingCost *Price `json:"total_parking_cost,omitempty"`
	TotalReservationCost *Price `json:"total_reservation_cost,omitempty"`
	Remark *string `json:"remark,omitempty"`
	InvoiceReferenceId *string `json:"invoice_reference_id,omitempty"`
	Credit *bool `json:"credit,omitempty"`
	CreditReferenceId *string `json:"credit_reference_id,omitempty"`
	HomeChargingCompensation *bool `json:"home_charging_compensation,omitempty"`
	LastUpdated string `json:"last_updated"`
}

// NewCdr instantiates a new Cdr object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCdr(countryCode string, partyId string, id string, startDateTime string, endDateTime string, cdrToken CdrCdrToken, authMethod string, cdrLocation CdrCdrLocation, currency string, totalCost Price, totalEnergy float32, totalTime float32, lastUpdated string) *Cdr {
	this := Cdr{}
	this.CountryCode = countryCode
	this.PartyId = partyId
	this.Id = id
	this.StartDateTime = startDateTime
	this.EndDateTime = endDateTime
	this.CdrToken = cdrToken
	this.AuthMethod = authMethod
	this.CdrLocation = cdrLocation
	this.Currency = currency
	this.TotalCost = totalCost
	this.TotalEnergy = totalEnergy
	this.TotalTime = totalTime
	this.LastUpdated = lastUpdated
	return &this
}

// NewCdrWithDefaults instantiates a new Cdr object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCdrWithDefaults() *Cdr {
	this := Cdr{}
	return &this
}

// GetCountryCode returns the CountryCode field value
func (o *Cdr) GetCountryCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CountryCode
}

// GetCountryCodeOk returns a tuple with the CountryCode field value
// and a boolean to check if the value has been set.
func (o *Cdr) GetCountryCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CountryCode, true
}

// SetCountryCode sets field value
func (o *Cdr) SetCountryCode(v string) {
	o.CountryCode = v
}

// GetPartyId returns the PartyId field value
func (o *Cdr) GetPartyId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PartyId
}

// GetPartyIdOk returns a tuple with the PartyId field value
// and a boolean to check if the value has been set.
func (o *Cdr) GetPartyIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PartyId, true
}

// SetPartyId sets field value
func (o *Cdr) SetPartyId(v string) {
	o.PartyId = v
}

// GetId returns the Id field value
func (o *Cdr) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Cdr) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Cdr) SetId(v string) {
	o.Id = v
}

// GetStartDateTime returns the StartDateTime field value
func (o *Cdr) GetStartDateTime() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StartDateTime
}

// GetStartDateTimeOk returns a tuple with the StartDateTime field value
// and a boolean to check if the value has been set.
func (o *Cdr) GetStartDateTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartDateTime, true
}

// SetStartDateTime sets field value
func (o *Cdr) SetStartDateTime(v string) {
	o.StartDateTime = v
}

// GetEndDateTime returns the EndDateTime field value
func (o *Cdr) GetEndDateTime() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EndDateTime
}

// GetEndDateTimeOk returns a tuple with the EndDateTime field value
// and a boolean to check if the value has been set.
func (o *Cdr) GetEndDateTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EndDateTime, true
}

// SetEndDateTime sets field value
func (o *Cdr) SetEndDateTime(v string) {
	o.EndDateTime = v
}

// GetSessionId returns the SessionId field value if set, zero value otherwise.
func (o *Cdr) GetSessionId() string {
	if o == nil || IsNil(o.SessionId) {
		var ret string
		return ret
	}
	return *o.SessionId
}

// GetSessionIdOk returns a tuple with the SessionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Cdr) GetSessionIdOk() (*string, bool) {
	if o == nil || IsNil(o.SessionId) {
		return nil, false
	}
	return o.SessionId, true
}

// HasSessionId returns a boolean if a field has been set.
func (o *Cdr) HasSessionId() bool {
	if o != nil && !IsNil(o.SessionId) {
		return true
	}

	return false
}

// SetSessionId gets a reference to the given string and assigns it to the SessionId field.
func (o *Cdr) SetSessionId(v string) {
	o.SessionId = &v
}

// GetCdrToken returns the CdrToken field value
func (o *Cdr) GetCdrToken() CdrCdrToken {
	if o == nil {
		var ret CdrCdrToken
		return ret
	}

	return o.CdrToken
}

// GetCdrTokenOk returns a tuple with the CdrToken field value
// and a boolean to check if the value has been set.
func (o *Cdr) GetCdrTokenOk() (*CdrCdrToken, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CdrToken, true
}

// SetCdrToken sets field value
func (o *Cdr) SetCdrToken(v CdrCdrToken) {
	o.CdrToken = v
}

// GetAuthMethod returns the AuthMethod field value
func (o *Cdr) GetAuthMethod() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AuthMethod
}

// GetAuthMethodOk returns a tuple with the AuthMethod field value
// and a boolean to check if the value has been set.
func (o *Cdr) GetAuthMethodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AuthMethod, true
}

// SetAuthMethod sets field value
func (o *Cdr) SetAuthMethod(v string) {
	o.AuthMethod = v
}

// GetAuthorizationReference returns the AuthorizationReference field value if set, zero value otherwise.
func (o *Cdr) GetAuthorizationReference() string {
	if o == nil || IsNil(o.AuthorizationReference) {
		var ret string
		return ret
	}
	return *o.AuthorizationReference
}

// GetAuthorizationReferenceOk returns a tuple with the AuthorizationReference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Cdr) GetAuthorizationReferenceOk() (*string, bool) {
	if o == nil || IsNil(o.AuthorizationReference) {
		return nil, false
	}
	return o.AuthorizationReference, true
}

// HasAuthorizationReference returns a boolean if a field has been set.
func (o *Cdr) HasAuthorizationReference() bool {
	if o != nil && !IsNil(o.AuthorizationReference) {
		return true
	}

	return false
}

// SetAuthorizationReference gets a reference to the given string and assigns it to the AuthorizationReference field.
func (o *Cdr) SetAuthorizationReference(v string) {
	o.AuthorizationReference = &v
}

// GetCdrLocation returns the CdrLocation field value
func (o *Cdr) GetCdrLocation() CdrCdrLocation {
	if o == nil {
		var ret CdrCdrLocation
		return ret
	}

	return o.CdrLocation
}

// GetCdrLocationOk returns a tuple with the CdrLocation field value
// and a boolean to check if the value has been set.
func (o *Cdr) GetCdrLocationOk() (*CdrCdrLocation, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CdrLocation, true
}

// SetCdrLocation sets field value
func (o *Cdr) SetCdrLocation(v CdrCdrLocation) {
	o.CdrLocation = v
}

// GetMeterId returns the MeterId field value if set, zero value otherwise.
func (o *Cdr) GetMeterId() string {
	if o == nil || IsNil(o.MeterId) {
		var ret string
		return ret
	}
	return *o.MeterId
}

// GetMeterIdOk returns a tuple with the MeterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Cdr) GetMeterIdOk() (*string, bool) {
	if o == nil || IsNil(o.MeterId) {
		return nil, false
	}
	return o.MeterId, true
}

// HasMeterId returns a boolean if a field has been set.
func (o *Cdr) HasMeterId() bool {
	if o != nil && !IsNil(o.MeterId) {
		return true
	}

	return false
}

// SetMeterId gets a reference to the given string and assigns it to the MeterId field.
func (o *Cdr) SetMeterId(v string) {
	o.MeterId = &v
}

// GetCurrency returns the Currency field value
func (o *Cdr) GetCurrency() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value
// and a boolean to check if the value has been set.
func (o *Cdr) GetCurrencyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Currency, true
}

// SetCurrency sets field value
func (o *Cdr) SetCurrency(v string) {
	o.Currency = v
}

// GetTariffs returns the Tariffs field value if set, zero value otherwise.
func (o *Cdr) GetTariffs() CdrTariffs {
	if o == nil || IsNil(o.Tariffs) {
		var ret CdrTariffs
		return ret
	}
	return *o.Tariffs
}

// GetTariffsOk returns a tuple with the Tariffs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Cdr) GetTariffsOk() (*CdrTariffs, bool) {
	if o == nil || IsNil(o.Tariffs) {
		return nil, false
	}
	return o.Tariffs, true
}

// HasTariffs returns a boolean if a field has been set.
func (o *Cdr) HasTariffs() bool {
	if o != nil && !IsNil(o.Tariffs) {
		return true
	}

	return false
}

// SetTariffs gets a reference to the given CdrTariffs and assigns it to the Tariffs field.
func (o *Cdr) SetTariffs(v CdrTariffs) {
	o.Tariffs = &v
}

// GetChargingPeriods returns the ChargingPeriods field value if set, zero value otherwise.
func (o *Cdr) GetChargingPeriods() CdrChargingPeriods {
	if o == nil || IsNil(o.ChargingPeriods) {
		var ret CdrChargingPeriods
		return ret
	}
	return *o.ChargingPeriods
}

// GetChargingPeriodsOk returns a tuple with the ChargingPeriods field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Cdr) GetChargingPeriodsOk() (*CdrChargingPeriods, bool) {
	if o == nil || IsNil(o.ChargingPeriods) {
		return nil, false
	}
	return o.ChargingPeriods, true
}

// HasChargingPeriods returns a boolean if a field has been set.
func (o *Cdr) HasChargingPeriods() bool {
	if o != nil && !IsNil(o.ChargingPeriods) {
		return true
	}

	return false
}

// SetChargingPeriods gets a reference to the given CdrChargingPeriods and assigns it to the ChargingPeriods field.
func (o *Cdr) SetChargingPeriods(v CdrChargingPeriods) {
	o.ChargingPeriods = &v
}

// GetSignedData returns the SignedData field value if set, zero value otherwise.
func (o *Cdr) GetSignedData() CdrSignedData {
	if o == nil || IsNil(o.SignedData) {
		var ret CdrSignedData
		return ret
	}
	return *o.SignedData
}

// GetSignedDataOk returns a tuple with the SignedData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Cdr) GetSignedDataOk() (*CdrSignedData, bool) {
	if o == nil || IsNil(o.SignedData) {
		return nil, false
	}
	return o.SignedData, true
}

// HasSignedData returns a boolean if a field has been set.
func (o *Cdr) HasSignedData() bool {
	if o != nil && !IsNil(o.SignedData) {
		return true
	}

	return false
}

// SetSignedData gets a reference to the given CdrSignedData and assigns it to the SignedData field.
func (o *Cdr) SetSignedData(v CdrSignedData) {
	o.SignedData = &v
}

// GetTotalCost returns the TotalCost field value
func (o *Cdr) GetTotalCost() Price {
	if o == nil {
		var ret Price
		return ret
	}

	return o.TotalCost
}

// GetTotalCostOk returns a tuple with the TotalCost field value
// and a boolean to check if the value has been set.
func (o *Cdr) GetTotalCostOk() (*Price, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalCost, true
}

// SetTotalCost sets field value
func (o *Cdr) SetTotalCost(v Price) {
	o.TotalCost = v
}

// GetTotalFixedCost returns the TotalFixedCost field value if set, zero value otherwise.
func (o *Cdr) GetTotalFixedCost() Price {
	if o == nil || IsNil(o.TotalFixedCost) {
		var ret Price
		return ret
	}
	return *o.TotalFixedCost
}

// GetTotalFixedCostOk returns a tuple with the TotalFixedCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Cdr) GetTotalFixedCostOk() (*Price, bool) {
	if o == nil || IsNil(o.TotalFixedCost) {
		return nil, false
	}
	return o.TotalFixedCost, true
}

// HasTotalFixedCost returns a boolean if a field has been set.
func (o *Cdr) HasTotalFixedCost() bool {
	if o != nil && !IsNil(o.TotalFixedCost) {
		return true
	}

	return false
}

// SetTotalFixedCost gets a reference to the given Price and assigns it to the TotalFixedCost field.
func (o *Cdr) SetTotalFixedCost(v Price) {
	o.TotalFixedCost = &v
}

// GetTotalEnergy returns the TotalEnergy field value
func (o *Cdr) GetTotalEnergy() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.TotalEnergy
}

// GetTotalEnergyOk returns a tuple with the TotalEnergy field value
// and a boolean to check if the value has been set.
func (o *Cdr) GetTotalEnergyOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalEnergy, true
}

// SetTotalEnergy sets field value
func (o *Cdr) SetTotalEnergy(v float32) {
	o.TotalEnergy = v
}

// GetTotalEnergyCost returns the TotalEnergyCost field value if set, zero value otherwise.
func (o *Cdr) GetTotalEnergyCost() Price {
	if o == nil || IsNil(o.TotalEnergyCost) {
		var ret Price
		return ret
	}
	return *o.TotalEnergyCost
}

// GetTotalEnergyCostOk returns a tuple with the TotalEnergyCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Cdr) GetTotalEnergyCostOk() (*Price, bool) {
	if o == nil || IsNil(o.TotalEnergyCost) {
		return nil, false
	}
	return o.TotalEnergyCost, true
}

// HasTotalEnergyCost returns a boolean if a field has been set.
func (o *Cdr) HasTotalEnergyCost() bool {
	if o != nil && !IsNil(o.TotalEnergyCost) {
		return true
	}

	return false
}

// SetTotalEnergyCost gets a reference to the given Price and assigns it to the TotalEnergyCost field.
func (o *Cdr) SetTotalEnergyCost(v Price) {
	o.TotalEnergyCost = &v
}

// GetTotalTime returns the TotalTime field value
func (o *Cdr) GetTotalTime() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.TotalTime
}

// GetTotalTimeOk returns a tuple with the TotalTime field value
// and a boolean to check if the value has been set.
func (o *Cdr) GetTotalTimeOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalTime, true
}

// SetTotalTime sets field value
func (o *Cdr) SetTotalTime(v float32) {
	o.TotalTime = v
}

// GetTotalTimeCost returns the TotalTimeCost field value if set, zero value otherwise.
func (o *Cdr) GetTotalTimeCost() Price {
	if o == nil || IsNil(o.TotalTimeCost) {
		var ret Price
		return ret
	}
	return *o.TotalTimeCost
}

// GetTotalTimeCostOk returns a tuple with the TotalTimeCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Cdr) GetTotalTimeCostOk() (*Price, bool) {
	if o == nil || IsNil(o.TotalTimeCost) {
		return nil, false
	}
	return o.TotalTimeCost, true
}

// HasTotalTimeCost returns a boolean if a field has been set.
func (o *Cdr) HasTotalTimeCost() bool {
	if o != nil && !IsNil(o.TotalTimeCost) {
		return true
	}

	return false
}

// SetTotalTimeCost gets a reference to the given Price and assigns it to the TotalTimeCost field.
func (o *Cdr) SetTotalTimeCost(v Price) {
	o.TotalTimeCost = &v
}

// GetTotalParkingTime returns the TotalParkingTime field value if set, zero value otherwise.
func (o *Cdr) GetTotalParkingTime() float32 {
	if o == nil || IsNil(o.TotalParkingTime) {
		var ret float32
		return ret
	}
	return *o.TotalParkingTime
}

// GetTotalParkingTimeOk returns a tuple with the TotalParkingTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Cdr) GetTotalParkingTimeOk() (*float32, bool) {
	if o == nil || IsNil(o.TotalParkingTime) {
		return nil, false
	}
	return o.TotalParkingTime, true
}

// HasTotalParkingTime returns a boolean if a field has been set.
func (o *Cdr) HasTotalParkingTime() bool {
	if o != nil && !IsNil(o.TotalParkingTime) {
		return true
	}

	return false
}

// SetTotalParkingTime gets a reference to the given float32 and assigns it to the TotalParkingTime field.
func (o *Cdr) SetTotalParkingTime(v float32) {
	o.TotalParkingTime = &v
}

// GetTotalParkingCost returns the TotalParkingCost field value if set, zero value otherwise.
func (o *Cdr) GetTotalParkingCost() Price {
	if o == nil || IsNil(o.TotalParkingCost) {
		var ret Price
		return ret
	}
	return *o.TotalParkingCost
}

// GetTotalParkingCostOk returns a tuple with the TotalParkingCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Cdr) GetTotalParkingCostOk() (*Price, bool) {
	if o == nil || IsNil(o.TotalParkingCost) {
		return nil, false
	}
	return o.TotalParkingCost, true
}

// HasTotalParkingCost returns a boolean if a field has been set.
func (o *Cdr) HasTotalParkingCost() bool {
	if o != nil && !IsNil(o.TotalParkingCost) {
		return true
	}

	return false
}

// SetTotalParkingCost gets a reference to the given Price and assigns it to the TotalParkingCost field.
func (o *Cdr) SetTotalParkingCost(v Price) {
	o.TotalParkingCost = &v
}

// GetTotalReservationCost returns the TotalReservationCost field value if set, zero value otherwise.
func (o *Cdr) GetTotalReservationCost() Price {
	if o == nil || IsNil(o.TotalReservationCost) {
		var ret Price
		return ret
	}
	return *o.TotalReservationCost
}

// GetTotalReservationCostOk returns a tuple with the TotalReservationCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Cdr) GetTotalReservationCostOk() (*Price, bool) {
	if o == nil || IsNil(o.TotalReservationCost) {
		return nil, false
	}
	return o.TotalReservationCost, true
}

// HasTotalReservationCost returns a boolean if a field has been set.
func (o *Cdr) HasTotalReservationCost() bool {
	if o != nil && !IsNil(o.TotalReservationCost) {
		return true
	}

	return false
}

// SetTotalReservationCost gets a reference to the given Price and assigns it to the TotalReservationCost field.
func (o *Cdr) SetTotalReservationCost(v Price) {
	o.TotalReservationCost = &v
}

// GetRemark returns the Remark field value if set, zero value otherwise.
func (o *Cdr) GetRemark() string {
	if o == nil || IsNil(o.Remark) {
		var ret string
		return ret
	}
	return *o.Remark
}

// GetRemarkOk returns a tuple with the Remark field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Cdr) GetRemarkOk() (*string, bool) {
	if o == nil || IsNil(o.Remark) {
		return nil, false
	}
	return o.Remark, true
}

// HasRemark returns a boolean if a field has been set.
func (o *Cdr) HasRemark() bool {
	if o != nil && !IsNil(o.Remark) {
		return true
	}

	return false
}

// SetRemark gets a reference to the given string and assigns it to the Remark field.
func (o *Cdr) SetRemark(v string) {
	o.Remark = &v
}

// GetInvoiceReferenceId returns the InvoiceReferenceId field value if set, zero value otherwise.
func (o *Cdr) GetInvoiceReferenceId() string {
	if o == nil || IsNil(o.InvoiceReferenceId) {
		var ret string
		return ret
	}
	return *o.InvoiceReferenceId
}

// GetInvoiceReferenceIdOk returns a tuple with the InvoiceReferenceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Cdr) GetInvoiceReferenceIdOk() (*string, bool) {
	if o == nil || IsNil(o.InvoiceReferenceId) {
		return nil, false
	}
	return o.InvoiceReferenceId, true
}

// HasInvoiceReferenceId returns a boolean if a field has been set.
func (o *Cdr) HasInvoiceReferenceId() bool {
	if o != nil && !IsNil(o.InvoiceReferenceId) {
		return true
	}

	return false
}

// SetInvoiceReferenceId gets a reference to the given string and assigns it to the InvoiceReferenceId field.
func (o *Cdr) SetInvoiceReferenceId(v string) {
	o.InvoiceReferenceId = &v
}

// GetCredit returns the Credit field value if set, zero value otherwise.
func (o *Cdr) GetCredit() bool {
	if o == nil || IsNil(o.Credit) {
		var ret bool
		return ret
	}
	return *o.Credit
}

// GetCreditOk returns a tuple with the Credit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Cdr) GetCreditOk() (*bool, bool) {
	if o == nil || IsNil(o.Credit) {
		return nil, false
	}
	return o.Credit, true
}

// HasCredit returns a boolean if a field has been set.
func (o *Cdr) HasCredit() bool {
	if o != nil && !IsNil(o.Credit) {
		return true
	}

	return false
}

// SetCredit gets a reference to the given bool and assigns it to the Credit field.
func (o *Cdr) SetCredit(v bool) {
	o.Credit = &v
}

// GetCreditReferenceId returns the CreditReferenceId field value if set, zero value otherwise.
func (o *Cdr) GetCreditReferenceId() string {
	if o == nil || IsNil(o.CreditReferenceId) {
		var ret string
		return ret
	}
	return *o.CreditReferenceId
}

// GetCreditReferenceIdOk returns a tuple with the CreditReferenceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Cdr) GetCreditReferenceIdOk() (*string, bool) {
	if o == nil || IsNil(o.CreditReferenceId) {
		return nil, false
	}
	return o.CreditReferenceId, true
}

// HasCreditReferenceId returns a boolean if a field has been set.
func (o *Cdr) HasCreditReferenceId() bool {
	if o != nil && !IsNil(o.CreditReferenceId) {
		return true
	}

	return false
}

// SetCreditReferenceId gets a reference to the given string and assigns it to the CreditReferenceId field.
func (o *Cdr) SetCreditReferenceId(v string) {
	o.CreditReferenceId = &v
}

// GetHomeChargingCompensation returns the HomeChargingCompensation field value if set, zero value otherwise.
func (o *Cdr) GetHomeChargingCompensation() bool {
	if o == nil || IsNil(o.HomeChargingCompensation) {
		var ret bool
		return ret
	}
	return *o.HomeChargingCompensation
}

// GetHomeChargingCompensationOk returns a tuple with the HomeChargingCompensation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Cdr) GetHomeChargingCompensationOk() (*bool, bool) {
	if o == nil || IsNil(o.HomeChargingCompensation) {
		return nil, false
	}
	return o.HomeChargingCompensation, true
}

// HasHomeChargingCompensation returns a boolean if a field has been set.
func (o *Cdr) HasHomeChargingCompensation() bool {
	if o != nil && !IsNil(o.HomeChargingCompensation) {
		return true
	}

	return false
}

// SetHomeChargingCompensation gets a reference to the given bool and assigns it to the HomeChargingCompensation field.
func (o *Cdr) SetHomeChargingCompensation(v bool) {
	o.HomeChargingCompensation = &v
}

// GetLastUpdated returns the LastUpdated field value
func (o *Cdr) GetLastUpdated() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value
// and a boolean to check if the value has been set.
func (o *Cdr) GetLastUpdatedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastUpdated, true
}

// SetLastUpdated sets field value
func (o *Cdr) SetLastUpdated(v string) {
	o.LastUpdated = v
}

func (o Cdr) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Cdr) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["country_code"] = o.CountryCode
	toSerialize["party_id"] = o.PartyId
	toSerialize["id"] = o.Id
	toSerialize["start_date_time"] = o.StartDateTime
	toSerialize["end_date_time"] = o.EndDateTime
	if !IsNil(o.SessionId) {
		toSerialize["session_id"] = o.SessionId
	}
	toSerialize["cdr_token"] = o.CdrToken
	toSerialize["auth_method"] = o.AuthMethod
	if !IsNil(o.AuthorizationReference) {
		toSerialize["authorization_reference"] = o.AuthorizationReference
	}
	toSerialize["cdr_location"] = o.CdrLocation
	if !IsNil(o.MeterId) {
		toSerialize["meter_id"] = o.MeterId
	}
	toSerialize["currency"] = o.Currency
	if !IsNil(o.Tariffs) {
		toSerialize["tariffs"] = o.Tariffs
	}
	if !IsNil(o.ChargingPeriods) {
		toSerialize["charging_periods"] = o.ChargingPeriods
	}
	if !IsNil(o.SignedData) {
		toSerialize["signed_data"] = o.SignedData
	}
	toSerialize["total_cost"] = o.TotalCost
	if !IsNil(o.TotalFixedCost) {
		toSerialize["total_fixed_cost"] = o.TotalFixedCost
	}
	toSerialize["total_energy"] = o.TotalEnergy
	if !IsNil(o.TotalEnergyCost) {
		toSerialize["total_energy_cost"] = o.TotalEnergyCost
	}
	toSerialize["total_time"] = o.TotalTime
	if !IsNil(o.TotalTimeCost) {
		toSerialize["total_time_cost"] = o.TotalTimeCost
	}
	if !IsNil(o.TotalParkingTime) {
		toSerialize["total_parking_time"] = o.TotalParkingTime
	}
	if !IsNil(o.TotalParkingCost) {
		toSerialize["total_parking_cost"] = o.TotalParkingCost
	}
	if !IsNil(o.TotalReservationCost) {
		toSerialize["total_reservation_cost"] = o.TotalReservationCost
	}
	if !IsNil(o.Remark) {
		toSerialize["remark"] = o.Remark
	}
	if !IsNil(o.InvoiceReferenceId) {
		toSerialize["invoice_reference_id"] = o.InvoiceReferenceId
	}
	if !IsNil(o.Credit) {
		toSerialize["credit"] = o.Credit
	}
	if !IsNil(o.CreditReferenceId) {
		toSerialize["credit_reference_id"] = o.CreditReferenceId
	}
	if !IsNil(o.HomeChargingCompensation) {
		toSerialize["home_charging_compensation"] = o.HomeChargingCompensation
	}
	toSerialize["last_updated"] = o.LastUpdated
	return toSerialize, nil
}

type NullableCdr struct {
	value *Cdr
	isSet bool
}

func (v NullableCdr) Get() *Cdr {
	return v.value
}

func (v *NullableCdr) Set(val *Cdr) {
	v.value = val
	v.isSet = true
}

func (v NullableCdr) IsSet() bool {
	return v.isSet
}

func (v *NullableCdr) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCdr(val *Cdr) *NullableCdr {
	return &NullableCdr{value: val, isSet: true}
}

func (v NullableCdr) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCdr) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


