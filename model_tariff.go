/*
OCPI tariffs module

Specification for OCPIs tariffs handlers

API version: 2.2.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package OCPI

import (
	"encoding/json"
)

// checks if the Tariff type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Tariff{}

// Tariff struct for Tariff
type Tariff struct {
	CountryCode string `json:"country_code"`
	PartyId string `json:"party_id"`
	Id string `json:"id"`
	Currency string `json:"currency"`
	Type *string `json:"type,omitempty"`
	TariffAltText *TariffTariffAltText `json:"tariff_alt_text,omitempty"`
	TariffAltUrl *string `json:"tariff_alt_url,omitempty"`
	MinPrice *Price `json:"min_price,omitempty"`
	MaxPrice *Price `json:"max_price,omitempty"`
	Elements *TariffElements `json:"elements,omitempty"`
	StartDateTime *string `json:"start_date_time,omitempty"`
	EndDateTime *string `json:"end_date_time,omitempty"`
	EnergyMix *TariffEnergyMix `json:"energy_mix,omitempty"`
	LastUpdated string `json:"last_updated"`
}

// NewTariff instantiates a new Tariff object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTariff(countryCode string, partyId string, id string, currency string, lastUpdated string) *Tariff {
	this := Tariff{}
	this.CountryCode = countryCode
	this.PartyId = partyId
	this.Id = id
	this.Currency = currency
	this.LastUpdated = lastUpdated
	return &this
}

// NewTariffWithDefaults instantiates a new Tariff object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTariffWithDefaults() *Tariff {
	this := Tariff{}
	return &this
}

// GetCountryCode returns the CountryCode field value
func (o *Tariff) GetCountryCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CountryCode
}

// GetCountryCodeOk returns a tuple with the CountryCode field value
// and a boolean to check if the value has been set.
func (o *Tariff) GetCountryCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CountryCode, true
}

// SetCountryCode sets field value
func (o *Tariff) SetCountryCode(v string) {
	o.CountryCode = v
}

// GetPartyId returns the PartyId field value
func (o *Tariff) GetPartyId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PartyId
}

// GetPartyIdOk returns a tuple with the PartyId field value
// and a boolean to check if the value has been set.
func (o *Tariff) GetPartyIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PartyId, true
}

// SetPartyId sets field value
func (o *Tariff) SetPartyId(v string) {
	o.PartyId = v
}

// GetId returns the Id field value
func (o *Tariff) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Tariff) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Tariff) SetId(v string) {
	o.Id = v
}

// GetCurrency returns the Currency field value
func (o *Tariff) GetCurrency() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value
// and a boolean to check if the value has been set.
func (o *Tariff) GetCurrencyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Currency, true
}

// SetCurrency sets field value
func (o *Tariff) SetCurrency(v string) {
	o.Currency = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *Tariff) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Tariff) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *Tariff) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *Tariff) SetType(v string) {
	o.Type = &v
}

// GetTariffAltText returns the TariffAltText field value if set, zero value otherwise.
func (o *Tariff) GetTariffAltText() TariffTariffAltText {
	if o == nil || IsNil(o.TariffAltText) {
		var ret TariffTariffAltText
		return ret
	}
	return *o.TariffAltText
}

// GetTariffAltTextOk returns a tuple with the TariffAltText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Tariff) GetTariffAltTextOk() (*TariffTariffAltText, bool) {
	if o == nil || IsNil(o.TariffAltText) {
		return nil, false
	}
	return o.TariffAltText, true
}

// HasTariffAltText returns a boolean if a field has been set.
func (o *Tariff) HasTariffAltText() bool {
	if o != nil && !IsNil(o.TariffAltText) {
		return true
	}

	return false
}

// SetTariffAltText gets a reference to the given TariffTariffAltText and assigns it to the TariffAltText field.
func (o *Tariff) SetTariffAltText(v TariffTariffAltText) {
	o.TariffAltText = &v
}

// GetTariffAltUrl returns the TariffAltUrl field value if set, zero value otherwise.
func (o *Tariff) GetTariffAltUrl() string {
	if o == nil || IsNil(o.TariffAltUrl) {
		var ret string
		return ret
	}
	return *o.TariffAltUrl
}

// GetTariffAltUrlOk returns a tuple with the TariffAltUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Tariff) GetTariffAltUrlOk() (*string, bool) {
	if o == nil || IsNil(o.TariffAltUrl) {
		return nil, false
	}
	return o.TariffAltUrl, true
}

// HasTariffAltUrl returns a boolean if a field has been set.
func (o *Tariff) HasTariffAltUrl() bool {
	if o != nil && !IsNil(o.TariffAltUrl) {
		return true
	}

	return false
}

// SetTariffAltUrl gets a reference to the given string and assigns it to the TariffAltUrl field.
func (o *Tariff) SetTariffAltUrl(v string) {
	o.TariffAltUrl = &v
}

// GetMinPrice returns the MinPrice field value if set, zero value otherwise.
func (o *Tariff) GetMinPrice() Price {
	if o == nil || IsNil(o.MinPrice) {
		var ret Price
		return ret
	}
	return *o.MinPrice
}

// GetMinPriceOk returns a tuple with the MinPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Tariff) GetMinPriceOk() (*Price, bool) {
	if o == nil || IsNil(o.MinPrice) {
		return nil, false
	}
	return o.MinPrice, true
}

// HasMinPrice returns a boolean if a field has been set.
func (o *Tariff) HasMinPrice() bool {
	if o != nil && !IsNil(o.MinPrice) {
		return true
	}

	return false
}

// SetMinPrice gets a reference to the given Price and assigns it to the MinPrice field.
func (o *Tariff) SetMinPrice(v Price) {
	o.MinPrice = &v
}

// GetMaxPrice returns the MaxPrice field value if set, zero value otherwise.
func (o *Tariff) GetMaxPrice() Price {
	if o == nil || IsNil(o.MaxPrice) {
		var ret Price
		return ret
	}
	return *o.MaxPrice
}

// GetMaxPriceOk returns a tuple with the MaxPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Tariff) GetMaxPriceOk() (*Price, bool) {
	if o == nil || IsNil(o.MaxPrice) {
		return nil, false
	}
	return o.MaxPrice, true
}

// HasMaxPrice returns a boolean if a field has been set.
func (o *Tariff) HasMaxPrice() bool {
	if o != nil && !IsNil(o.MaxPrice) {
		return true
	}

	return false
}

// SetMaxPrice gets a reference to the given Price and assigns it to the MaxPrice field.
func (o *Tariff) SetMaxPrice(v Price) {
	o.MaxPrice = &v
}

// GetElements returns the Elements field value if set, zero value otherwise.
func (o *Tariff) GetElements() TariffElements {
	if o == nil || IsNil(o.Elements) {
		var ret TariffElements
		return ret
	}
	return *o.Elements
}

// GetElementsOk returns a tuple with the Elements field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Tariff) GetElementsOk() (*TariffElements, bool) {
	if o == nil || IsNil(o.Elements) {
		return nil, false
	}
	return o.Elements, true
}

// HasElements returns a boolean if a field has been set.
func (o *Tariff) HasElements() bool {
	if o != nil && !IsNil(o.Elements) {
		return true
	}

	return false
}

// SetElements gets a reference to the given TariffElements and assigns it to the Elements field.
func (o *Tariff) SetElements(v TariffElements) {
	o.Elements = &v
}

// GetStartDateTime returns the StartDateTime field value if set, zero value otherwise.
func (o *Tariff) GetStartDateTime() string {
	if o == nil || IsNil(o.StartDateTime) {
		var ret string
		return ret
	}
	return *o.StartDateTime
}

// GetStartDateTimeOk returns a tuple with the StartDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Tariff) GetStartDateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.StartDateTime) {
		return nil, false
	}
	return o.StartDateTime, true
}

// HasStartDateTime returns a boolean if a field has been set.
func (o *Tariff) HasStartDateTime() bool {
	if o != nil && !IsNil(o.StartDateTime) {
		return true
	}

	return false
}

// SetStartDateTime gets a reference to the given string and assigns it to the StartDateTime field.
func (o *Tariff) SetStartDateTime(v string) {
	o.StartDateTime = &v
}

// GetEndDateTime returns the EndDateTime field value if set, zero value otherwise.
func (o *Tariff) GetEndDateTime() string {
	if o == nil || IsNil(o.EndDateTime) {
		var ret string
		return ret
	}
	return *o.EndDateTime
}

// GetEndDateTimeOk returns a tuple with the EndDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Tariff) GetEndDateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.EndDateTime) {
		return nil, false
	}
	return o.EndDateTime, true
}

// HasEndDateTime returns a boolean if a field has been set.
func (o *Tariff) HasEndDateTime() bool {
	if o != nil && !IsNil(o.EndDateTime) {
		return true
	}

	return false
}

// SetEndDateTime gets a reference to the given string and assigns it to the EndDateTime field.
func (o *Tariff) SetEndDateTime(v string) {
	o.EndDateTime = &v
}

// GetEnergyMix returns the EnergyMix field value if set, zero value otherwise.
func (o *Tariff) GetEnergyMix() TariffEnergyMix {
	if o == nil || IsNil(o.EnergyMix) {
		var ret TariffEnergyMix
		return ret
	}
	return *o.EnergyMix
}

// GetEnergyMixOk returns a tuple with the EnergyMix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Tariff) GetEnergyMixOk() (*TariffEnergyMix, bool) {
	if o == nil || IsNil(o.EnergyMix) {
		return nil, false
	}
	return o.EnergyMix, true
}

// HasEnergyMix returns a boolean if a field has been set.
func (o *Tariff) HasEnergyMix() bool {
	if o != nil && !IsNil(o.EnergyMix) {
		return true
	}

	return false
}

// SetEnergyMix gets a reference to the given TariffEnergyMix and assigns it to the EnergyMix field.
func (o *Tariff) SetEnergyMix(v TariffEnergyMix) {
	o.EnergyMix = &v
}

// GetLastUpdated returns the LastUpdated field value
func (o *Tariff) GetLastUpdated() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value
// and a boolean to check if the value has been set.
func (o *Tariff) GetLastUpdatedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastUpdated, true
}

// SetLastUpdated sets field value
func (o *Tariff) SetLastUpdated(v string) {
	o.LastUpdated = v
}

func (o Tariff) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Tariff) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["country_code"] = o.CountryCode
	toSerialize["party_id"] = o.PartyId
	toSerialize["id"] = o.Id
	toSerialize["currency"] = o.Currency
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.TariffAltText) {
		toSerialize["tariff_alt_text"] = o.TariffAltText
	}
	if !IsNil(o.TariffAltUrl) {
		toSerialize["tariff_alt_url"] = o.TariffAltUrl
	}
	if !IsNil(o.MinPrice) {
		toSerialize["min_price"] = o.MinPrice
	}
	if !IsNil(o.MaxPrice) {
		toSerialize["max_price"] = o.MaxPrice
	}
	if !IsNil(o.Elements) {
		toSerialize["elements"] = o.Elements
	}
	if !IsNil(o.StartDateTime) {
		toSerialize["start_date_time"] = o.StartDateTime
	}
	if !IsNil(o.EndDateTime) {
		toSerialize["end_date_time"] = o.EndDateTime
	}
	if !IsNil(o.EnergyMix) {
		toSerialize["energy_mix"] = o.EnergyMix
	}
	toSerialize["last_updated"] = o.LastUpdated
	return toSerialize, nil
}

type NullableTariff struct {
	value *Tariff
	isSet bool
}

func (v NullableTariff) Get() *Tariff {
	return v.value
}

func (v *NullableTariff) Set(val *Tariff) {
	v.value = val
	v.isSet = true
}

func (v NullableTariff) IsSet() bool {
	return v.isSet
}

func (v *NullableTariff) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTariff(val *Tariff) *NullableTariff {
	return &NullableTariff{value: val, isSet: true}
}

func (v NullableTariff) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTariff) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


