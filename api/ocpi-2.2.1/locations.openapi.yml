---
openapi: "3.0.3"
info:
  version: 2.2.1
  title: OCPI locations module
  description: Specification for OCPIs locations handlers
paths:
  /ocpi/locations:
    get:
      description: "Depending on the URL Segments provided, the GET \
      \ request can either be used to retrieve information about a \
      \ list of available Locations (with EVSEs and Connectors) at \
      \ a CPO (GET List) or it can be used to retrieve information \
      \ about one specific Location, OCPI 2.2.1 51 EVSE or Connector \
      \ (GET Object)."
      parameters:
        - in: query
          name: date_from
          schema:
            type: string
          description: "Return Locations that have last_updated after or equal to this date time (inclusive)."
        - in: query
          name: date_to
          schema:
            type: string
          description: "Return Locations that have last_updated up to this date time, but not including (exclusive)."
        - in: query
          name: offset
          schema:
            type: integer
          description: "The offset of the first object returned. Default is 0."
        - in: query
          name: limit
          schema:
            type: integer
          description: "Maximum number of objects to GET."
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/locations'
          description: locations
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
      summary: Get available locations
  /ocpi/locations/{location_id}:
    get:
      description: "Endpoint structure definition for retrieving a Location, EVSE or Connector:"
      parameters:
        - in: path
          name: location_id
          schema:
            type: string
          required: true
          description: "Location.id of the Location object to retrieve."
        - in: query
          name: evse_uid
          schema:
            type: string
          description: "Evse.uid, required when requesting an EVSE or Connector object."
        - in: query
          name: connector_id
          schema:
            type: string
          description: "Connector.id, required when requesting a Connector object."
      responses:
        "200":
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/locations'
                  - $ref: '#/components/schemas/evse'
                  - $ref: '#/components/schemas/connector'
          description: locations, evse, connector
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
      summary: Get location, EVSE or connector
  /ocpi/locations/{country_code}/{party_id}/{location_id}:
    get:
      description: "If the CPO wants to check the status of a Location, EVSE \
      \ or Connector object in the eMSP system, it might GET the object from \
      \ the eMSP system for validation purposes. The CPO is the owner of the \
      \ objects, so it would be illogical if the eMSP system had a different \
      \ status or was missing an object. If a discrepancy is found, the CPO \
      \ might push an update to the eMSP via a PUT or PATCH call."
      parameters:
        - in: path
          name: country_code
          schema:
            type: string
          required: true
          description: "Country code of the CPO requesting data from the eMSP system."
        - in: path
          name: party_id
          schema:
            type: string
          required: true
          description: "Party ID (Provider ID) of the CPO requesting data from the eMSP system."
        - in: path
          name: location_id
          schema:
            type: string
          required: true
          description: "Location.id of the Location object to retrieve."
        - in: query
          name: evse_uid
          schema:
            type: string
          description: "Evse.uid, required when requesting an EVSE or Connector object."
        - in: query
          name: connector_id
          schema:
            type: string
          description: "Connector.id, required when requesting a Connector object."
      responses:
        "200":
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/locations'
                  - $ref: '#/components/schemas/evse'
                  - $ref: '#/components/schemas/connector'
          description: locations, evse, connector
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
      summary: Get location, EVSE or connector
    put:
      description: "The CPO pushes available Location, EVSE or Connector \
      \ objects to the eMSP. PUT can be used to send new Location objects to \
      \ the eMSP but also to replace existing Locations. When the PUT only \
      \ contains a Connector Object, the Receiver SHALL also set the new \
      \ last_updated value on the parent EVSE and Location Objects. When \
      \ the PUT only contains a EVSE Object, the Receiver SHALL also set \
      \the new last_updated value on the parent Location Object."
      parameters:
        - in: path
          name: country_code
          schema:
            type: string
          required: true
          description: "Country code of the CPO requesting data from the eMSP system."
        - in: path
          name: party_id
          schema:
            type: string
          required: true
          description: "Party ID (Provider ID) of the CPO requesting data from the eMSP system."
        - in: path
          name: location_id
          schema:
            type: string
          required: true
          description: "Location.id of the Location object to retrieve."
        - in: query
          name: evse_uid
          schema:
            type: string
          description: "Evse.uid, required when requesting an EVSE or Connector object."
        - in: query
          name: connector_id
          schema:
            type: string
          description: "Connector.id, required when requesting a Connector object."
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/locations'
                - $ref: '#/components/schemas/evse'
                - $ref: '#/components/schemas/connector'
      responses:
        "200":
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/locations'
                  - $ref: '#/components/schemas/evse'
                  - $ref: '#/components/schemas/connector'
          description: locations, evse, connector
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
      summary: Sends new location object
    patch:
      description: "Same as the PUT method, but only the fields/objects that have \
      \ to be updated have to be present. Other fields/objects that are not specified \
      \ as part of the request are considered unchanged. Therefore, this method is not \
      \ suitable to remove information shared earlier. Any request to the PATCH method \
      \ SHALL contain the last_updated field. When the PATCH is on a Connector Object, \
      \ the Receiver SHALL also set the new last_updated value on the parent EVSE and \
      \ Location Objects. When the PATCH is on a EVSE Object, the Receiver SHALL also \
      \ set the new last_updated value on the parent Location Object."
      parameters:
        - in: path
          name: country_code
          schema:
            type: string
          required: true
          description: "Country code of the CPO requesting data from the eMSP system."
        - in: path
          name: party_id
          schema:
            type: string
          required: true
          description: "Party ID (Provider ID) of the CPO requesting data from the eMSP system."
        - in: path
          name: location_id
          schema:
            type: string
          required: true
          description: "Location.id of the Location object to retrieve."
        - in: query
          name: evse_uid
          schema:
            type: string
          description: "Evse.uid, required when requesting an EVSE or Connector object."
        - in: query
          name: connector_id
          schema:
            type: string
          description: "Connector.id, required when requesting a Connector object."
      responses:
        "200":
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/locations'
                  - $ref: '#/components/schemas/evse'
                  - $ref: '#/components/schemas/connector'
          description: locations, evse, connector
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
      summary: Sends new location object
components:
  schemas:
    locations:
      type: object
      properties:
        data:
          type: object
          properties:
            country_code:
              type: string
              example: "CZ"
            party_id:
              type: string
              example: "BEC"
            id:
              type: string
              example: "LOC1"
            publish:
              type: boolean
              example: true
            publish_allowed_to:
              type: object
              properties:
                uid:
                  type: string
                  example: "012345678"
                type:
                  type: string
                  enum: ["AD_HOC_USER", "APP_USER", "OTHER", "RFID"]
                visual_number:
                  type: string
                  example: "DF000-2001-8999"
                issuer:
                  type: string
                  example: "TheNewMotion"
                group_id:
                  type: string
                  example: "DF000-2001-8999"
            name:
              type: string
              example: "Gent Zuid"
            address:
              type: string
              example: "F.Rooseveltlaan 3A"
            city:
              type: string
              example: "Gent"
            postal_code:
              type: string
              example: "9000"
            state:
              type: string
              example: "Slovenia"
            country:
              type: string
              example: "BEL"
            coordinates:
              type: object
              properties:
                latitude:
                  type: string
                  example: "51.047599"
                longitude:
                  type: string
                  example: "3.729944"
              required:
                - latitude
                - longitude
            related_locations:
              type: object
              properties:
                latitude:
                  type: string
                  example: "51.047599"
                longitude:
                  type: string
                  example: "3.729944"
                name:
                  type: object
                  properties:
                    language:
                      type: string
                      example: "en"
                    text:
                      type: string
                      example: "2.00 euro p/hour including VAT."
                  required:
                    - language
                    - text
              required:
                - latitude
                - longitude
            parking_type:
              type: string
              enum: ["ALONG_MOTORWAY", "PARKING_GARAGE", "PARKING_LOT", "ON_DRIVEWAY", "ON_STREET", "UNDERGROUND_GARAGE"]
            evses:
                $ref: '#/components/schemas/evse'
            directions:
              type: object
              properties:
                language:
                  type: string
                  example: "en"
                text:
                  type: string
                  example: "2.00 euro p/hour including VAT."
              required:
                - language
                - text
            operator:
              $ref: '#/components/schemas/businessDetails'
            suboperator:
              $ref: '#/components/schemas/businessDetails'
            owner:
              $ref: '#/components/schemas/businessDetails'
            facilities:
              type: string
              enum: ["HOTEL", "RESTAURANT", "CAFE", "MALL", "SUPERMARKET", "SPORT", "RECREATION_AREA", "NATURE",
                "MUSEUM", "BIKE_SHARING", "BUS_STOP", "TAXI_STAND", "TRAM_STOP", "METRO_STATION", "TRAIN_STATION",
                "AIRPORT", "PARKING_LOT", "CARPOOL_PARKING", "FUEL_STATION", "WIFI"]
            time_zone:
              type: string
              example: "Europe/Brussels"
            opening_times:
              type: object
              properties:
                twentyfourseven:
                  type: boolean
                  example: true
                regular_hours:
                  type: object
                  properties:
                    weekday:
                      type: integer
                      example: 1
                    period_begin:
                      type: string
                      example: "07:00"
                    period_end:
                      type: string
                      example: "18:00"
                  required:
                    - weekday
                    - period_begin
                    - period_end
                exceptional_openings:
                  type: object
                  properties:
                    period_begin:
                      type: string
                      example: "07:00"
                    period_end:
                      type: string
                      example: "18:00"
                  required:
                    - period_begin
                    - period_end
                exceptional_closings:
                  type: object
                  properties:
                    period_begin:
                      type: string
                      example: "07:00"
                    period_end:
                      type: string
                      example: "18:00"
                  required:
                    - period_begin
                    - period_end
              required:
                - twentyfourseven
            charging_when_closed:
              type: boolean
              example: false
            images:
              $ref: '#/components/schemas/image'
            energy_mix:
              type: object
              properties:
                is_green_energy:
                  type: boolean
                  example: true
                energy_sources:
                  type: object
                  properties:
                    source:
                      type: string
                      enum: ["NUCLEAR", "GENERAL_FOSSIL", "COAL", "GAS", "GENERAL_GREEN", "SOLAR", "WIND", "WATER"]
                    percentage:
                      type: number
                      example: "21.7"
                  required:
                    - source
                    - percentage
                environ_impact:
                  type: object
                  properties:
                    category:
                      type: string
                      enum: ["NUCLEAR_WASTE", "CARBON_DIOXIDE"]
                    amount:
                      type: number
                      example: 372
                  required:
                    - category
                    - amount
                supplier_name:
                  type: string
                  example: "E.ON Energy Deutschland"
                energy_product_name:
                  type: string
                  example: "E.ON DirektStrom eco"
              required:
                - is_green_energy
            last_updated:
              type: string
              example: "2015-06-29T20:39:09Z"
          required:
            - address
            - city
            - country
            - coordinates
            - time_zone
            - last_updated
        status_code:
          type: number
          example: 1000
        status_message:
          type: string
          example: "Success"
        timeStamp:
          type: string
          example: "2015-06-30T21:59:59Z"
      required:
        - status_code
        - timestamp
    image:
      type: object
      properties:
        url:
          type: string
          example: "https://example.com/img/logo.jpg"
        thumbnail:
          type: string
          example: "https://example.com/img/logo_thumb.jpg"
        category:
          type: string
          enum: ["CHARGER", "ENTRANCE", "LOCATION", "NETWORK", "OPERATOR", "OTHER", "OWNER"]
        type:
          type: string
          example: "jpeg"
        width:
          type: number
          example: 512
        height:
          type: number
          example: 512
      required:
        - url
        - category
        - type
    evse:
      type: object
      properties:
        uid:
          type: string
          example: "3256"
        evse_id:
          type: string
          example: "BE*BEC*E041503001"
        status:
          type: string
          enum: ["AVAILABLE", "BLOCKED", "CHARGING", "INOPERATIVE", "OUTOFORDER", "PLANNED", "REMOVED", "RESERVED", "UNKNOWN"]
        status_schedule:
          type: object
          properties:
            period_begin:
              type: string
              example: "07:00"
            period_end:
              type: string
              example: "18:00"
            status:
              type: string
              enum: ["AVAILABLE", "BLOCKED", "CHARGING", "INOPERATIVE", "OUTOFORDER", "PLANNED", "REMOVED", "RESERVED", "UNKNOWN"]
          required:
            - period_begin
            - status
        capabilities:
          type: string
          enum: ["CHARGING_PROFILE_CAPABLE", "CHARGING_PREFERENCES_CAPABLE", "CHIP_CARD_SUPPORT", "CONTACTLESS_CARD_SUPPORT",
            "CREDIT_CARD_PAYABLE", "DEBIT_CARD_PAYABLE", "PED_TERMINAL", "REMOTE_START_STOP_CAPABLE", "RESERVABLE",
            "RFID_READER", "START_SESSION_CONNECTOR_REQUIRED", "TOKEN_GROUP_CAPABLE", "UNLOCK_CAPABLE"]
        connectors:
          $ref: '#/components/schemas/connector'
        floor_level:
          type: string
          example: "-1"
        coordinates:
          type: object
          properties:
            latitude:
              type: string
              example: "51.047599"
            longitude:
              type: string
              example: "3.729944"
          required:
            - latitude
            - longitude
        physical_reference:
          type: string
          example: "1"
        directions:
          type: object
          properties:
            language:
              type: string
              example: "en"
            text:
              type: string
              example: "2.00 euro p/hour including VAT."
          required:
            - language
            - text
        parking_restrictions:
          type: string
          enum: ["EV_ONLY", "PLUGGED", "DISABLED", "CUSTOMERS", "MOTORCYCLES"]
        images:
          $ref: '#/components/schemas/image'
        last_updated:
          type: string
          example: "2015-03-18T08:12:01Z"
      required:
      - uid
      - status
      - last_updated
    connector:
      type: object
      properties:
        id:
          type: string
          example: "1"
        standard:
          type: string
          enum: ["CHADEMO", "CHAOJI", "DOMESTIC_A", "DOMESTIC_B", "DOMESTIC_C", "DOMESTIC_D", "DOMESTIC_E",
            "DOMESTIC_F", "DOMESTIC_G", "DOMESTIC_H", "DOMESTIC_J", "DOMESTIC_K", "DOMESTIC_L", "DOMESTIC_M",
            "DOMESTIC_N", "DOMESTIC_O", "GBT_AC", "GBT_DC", "IEC_60309_2_single_16", "IEC_60309_2_three_16",
            "IEC_60309_2_three_32", "IEC_60309_2_three_64", "IEC_62196_T1", "IEC_62196_T1_COMBO", "IEC_62196_T2",
            "IEC_62196_T2_COMBO", "IEC_62196_T3A", "IEC_62196_T3C", "NEMA_5_20", "NEMA_6_30", "NEMA_6_50",
            "NEMA_10_30",  "NEMA_10_50", "NEMA_14_30", "NEMA_14_50", "PANTOGRAPH_BOTTOM_UP", "PANTOGRAPH_TOP_DOWN",
            "TESLA_R", "TESLA_S"]
        format:
          type: string
          enum: ["SOCKET", "CABLE"]
        power_type:
          type: string
          enum: ["AC_1_PHASE", "AC_2_PHASE", "AC_2_PHASE_SPLIT", "AC_3_PHASE", "DC"]
        max_voltage:
          type: integer
          example: 220
        max_amperage:
          type: integer
          example: 16
        max_electric_power:
          type: integer
          example: 0
        tariff_ids:
          type: string
          example: "11"
        terms_and_conditions:
          type: string
          example: "https://example.com/terms_and_conditions"
        last_updated:
          type: string
          example: "2015-03-16T10:10:02Z"
      required:
        - id
        - standard
        - format
        - power_type
        - max_voltage
        - max_amperage
        - last_updated
    businessDetails:
      type: object
      properties:
        name:
          type: string
          example: "Example Operator"
        website:
          type: string
          example: "http://example.com"
        logo:
          type: object
          properties:
            url:
              type: string
              example: "https://example.com/img/logo.jpg"
            thumbnail:
              type: string
              example: "https://example.com/img/logo_thumb.jpg"
            category:
              type: string
              enum: [ "CHARGER", "ENTRANCE", "LOCATION", "NETWORK", "OPERATOR", "OTHER", "OWNER" ]
            type:
              type: string
              example: "jpeg"
            width:
              type: number
              example: 512
            height:
              type: number
              example: 512
          required:
            - url
            - category
            - type
      required:
        - name
    genericError:
      type: object
      properties:
        status_code:
          type: number
          example: 2001
        status_message:
          type: string
          example: "Missing required field: type"
        timeStamp:
          type: string
          example: "2015-06-30T21:59:59Z"
      required:
        - status_code
        - timeStamp
