---
openapi: "3.0.3"
info:
  version: 2.2.1
  title: OCPI hub client info module
  description: Specification for OCPIs hub client info handlers
paths:
  /ocpi/clientinfo/{country_code}/{party_id}:
    get:
      description: "If the Hub wants to check the status of a ClientInfo \
      \ object in the connected clients system it might GET the object from the \
      \ connected clients system for validation purposes. The Hub is the owner \
      \ of the objects, so it would be illogical if the connected client system \
      \ had a different status or was missing an object."
      parameters:
        - in: path
          name: country_code
          schema:
            type: string
          required: true
          description: "Country code of the requested ClientInfo object."
        - in: path
          name: party_id
          schema:
            type: string
          required: true
          description: "Party ID (Provider ID) of the requested ClientInfo object."
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
          description: response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
      summary: Get a ClientInfo object as it is stored in the connected clients system.
    put:
      description: "New or updated ClientInfo objects are pushed from the Hub to a connected client."
      parameters:
        - in: path
          name: country_code
          schema:
            type: string
          required: true
          description: "Country code of the eMSP sending this PUT request to the CPO system."
        - in: path
          name: party_id
          schema:
            type: string
          required: true
          description: "Party ID (Provider ID) of the eMSP sending this PUT request to the CPO system."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/clientInfo'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
          description: response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
      summary: Create or update client info
  /ocpi/hubclientinfo:
    get:
      description: "Fetch information about clients connected to a Hub."
      parameters:
        - in: query
          name: date_from
          schema:
            type: string
          description: "Return ClientInfo that have last_updated after or equal to Date/Time (inclusive)."
        - in: query
          name: date_to
          schema:
            type: string
          description: "Return ClientInfo that have last_updated up to Date/Time, but not including (exclusive)."
        - in: query
          name: offset
          schema:
            type: integer
          description: "The offset of the first object returned. Default is 0."
        - in: query
          name: limit
          schema:
            type: integer
          description: "Maximum number of objects to GET."
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/clientInfoResponse'
          description: clientInfoResponse
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
      summary: Get hub connected clients
components:
  schemas:
    response:
      type: object
      properties:
        client_info:
          $ref: '#/components/schemas/clientInfo'
        status_code:
            type: number
            example: 1000
        status_message:
          type: string
          example: "Success"
        timeStamp:
          type: string
          example: "2015-06-30T21:59:59Z"
      required:
        - client_info
        - status_code
        - timestamp
    clientInfoResponse:
      type: object
      properties:
        clients_info:
          $ref: '#/components/schemas/clientInfo'
        status_code:
            type: number
            example: 1000
        status_message:
          type: string
          example: "Success"
        timeStamp:
          type: string
          example: "2015-06-30T21:59:59Z"
      required:
        - status_code
        - timestamp
    clientInfo:
      type: object
      properties:
        party_id:
          type: string
          example: "TNM"
        country_code:
          type: string
          example: "DE"
        role:
          type: string
          enum: ["CPO", "EMSP", "HUB", "NAP", "NSP", "OTHER", "SCSP"]
        status:
          type: string
          enum: ["CONNECTED", "OFFLINE", "PLANNED", "SUSPENDED"]
        last_updated:
          type: string
          example: "2019-06-23T08:16:02Z"
      required:
        - party_id
        - country_code
        - role
        - status
        - last_updated
    genericError:
      type: object
      properties:
        status_code:
          type: number
          example: 2001
        status_message:
          type: string
          example: "Missing required field: type"
        timeStamp:
          type: string
          example: "2015-06-30T21:59:59Z"
      required:
        - status_code
        - timeStamp

