---
openapi: "3.0.3"
info:
  version: 2.2.1
  title: OCPI sessions module
  description: Specification for OCPIs sessions handlers
paths:
  /ocpi/sessions:
    get:
      description: "Fetch Session objects of charging sessions last \
      \ updated between the {date_from} and {date_to} (paginated)."
      parameters:
        - in: query
          name: date_from
          schema:
            type: string
          description: "Return Sessions that have last_updated after or equal to this date time (inclusive)."
        - in: query
          name: date_to
          schema:
            type: string
          description: "Return Sessions that have last_updated up to this date time, but not including (exclusive)."
        - in: query
          name: offset
          schema:
            type: integer
          description: "The offset of the first object returned. Default is 0."
        - in: query
          name: limit
          schema:
            type: integer
          description: "Maximum number of objects to GET."
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sessionsResponse'
          description: sessionsResponse
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
      summary: Get charging sessions
  /ocpi/sessions/{session_id}/charging_preferences:
    put:
      description: "Setting Charging Preferences of an ongoing session.\
      \ If a PUT with ChargingPreferences is received for an EVSE that \
      \ does not have the capability CHARGING_PREFERENCES_CAPABLE, the \
      \ receiver should respond with an HTTP status of 404 and an OCPI \
      \ status code of 2001 in the OCPI response object."
      parameters:
        - in: path
          name: session_id
          schema:
            type: string
          required: true
          description: "Session.id of the Session for which the Charging Preferences are to be set."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/chargingPreferences'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/chargingPreferencesResponse'
          description: chargingPreferencesResponse
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
      summary: Update charging session
  /ocpi/sessions/{country_code}/{party_id}/{session_id}:
    get:
      description: "The CPO system might request the current version of \
      \ a Session object from the eMSP's system to, for example, validate the state,\
      \ or because the CPO has received an error during a PATCH operation."
      parameters:
        - in: path
          name: country_code
          schema:
            type: string
          required: true
          description: "Country code of the CPO performing the GET on the eMSP's system"
        - in: path
          name: party_id
          schema:
            type: string
          required: true
          description: "Party ID (Provider ID) of the CPO performing the GET on the eMSP's system."
        - in: path
          name: session_id
          schema:
            type: string
          required: true
          description: "Id of the Session object to get from the eMSP's system."
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sessionResponse'
          description: sessionResponse
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
      summary: Get session with session_id
    put:
      description: ""
      parameters:
        - in: path
          name: country_code
          schema:
            type: string
          required: true
          description: "Country code of the CPO performing this PUT on the eMSP's system. \
          \ This SHALL be the same value as the country_code in the Session object being pushed."
        - in: path
          name: party_id
          schema:
            type: string
          required: true
          description: "Party ID (Provider ID) of the CPO performing this PUT on the eMSP's \
          \ system. This SHALL be the same value as the party_id in the Session object being \
          \ pushed."
        - in: path
          name: session_id
          schema:
            type: string
          required: true
          description: "Id of the new or updated Session object."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/session'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sessionResponse'
          description: sessionResponse
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
      summary: Update session with session_id
    patch:
      description: "Same as the PUT method, but only the fields/objects that need to \
      \ be updated have to be present. Fields/objects which are not specified are \
      \ considered unchanged. Any request to the PATCH method SHALL contain the last_updated \
      \ field. The PATCH method of the Session Receiver interface works on the entire Session \
      \ object only. It is not allowed to use extra URL segments to try to PATCH fields of inner \
      \ objects of the Session object directly. When a PATCH request contains the charging_periods \
      \ field (inside a Session object), this SHALL be processed as a request to add all the \
      \ ChargingPeriod objects to the existing Session object. If the request charging_periods \
      \ list is omitted (or contains an empty list), no changes SHALL be made to the existing \
      \ list of charging_periods. If existing ChargingPeriod objects in a Session need to be \ 
      \ replaced or removed, the Sender SHALL use the PUT method to replace the entire Session \
      \ object (including all the charging_periods)."
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sessionResponse'
          description: sessionResponse
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
      summary: Update session with session_id
components:
  schemas:
    sessionsResponse:
      type: object
      properties:
        sessions:
          $ref: '#/components/schemas/session'
        status_code:
          type: number
          example: 1000
        status_message:
          type: string
          example: "Success"
        timeStamp:
          type: string
          example: "2015-06-30T21:59:59Z"
      required:
        - status_code
        - timestamp
    sessionResponse:
      type: object
      properties:
        session:
          $ref: '#/components/schemas/session'
        status_code:
            type: number
            example: 1000
        status_message:
          type: string
          example: "Success"
        timeStamp:
          type: string
          example: "2015-06-30T21:59:59Z"
      required:
        - session
        - status_code
        - timestamp
    session:
      type: object
      properties:
        country_code:
          type: string
          example: "CZ"
        party_id:
          type: string
          example: "STK"
        id:
          type: string
          example: "101"
        start_date_time:
          type: string
          example: "2020-03-09T10:17:09Z"
        end_date_time:
          type: string
          example: "2020-04-09T10:17:09Z"
        kwh:
          type: number
          example: 0.0
        cdr_token:
          type: object
          properties:
            country_code:
              type: string
              example: "CZ"
            party_id:
              type: string
              example: "STK"
            uid:
              type: string
              example: "123abc"
            type:
              type: string
              enum: ["AD_HOC_USER", "APP_USER", "OTHER", "RFID"]
            contract_id:
              type: string
              example: "NL-TST-C12345678-S"
          required:
            - country_code
            - party_id
            - uid
            - type
            - contract_id
        auth_method:
          type: string
          enum: ["AUTH_REQUEST", "COMMAND", "WHITELIST"]
        authorization_reference:
          type: string
          example: ""
        location_id:
          type: string
          example: "LOC1"
        evse_uid:
          type: string
          example: "3256"
        connector_id:
          type: string
          example: "1"
        meter_id:
          type: string
        currency:
          type: string
          example: "EUR"
        charging_periods:
          type: object
          properties:
            start_date_time:
              type: string
              example: "2019-06-23T08:16:02Z"
            dimensions:
              type: object
              properties:
                type:
                  type: string
                  enum: [ "AUTH_REQUEST", "COMMAND", "WHITELIST" ]
                volume:
                  type: number
                  example: "120"
              required:
                - type
                - volume
            tariff_id:
              type: string
              example: "12"
          required:
          - start_date_time
        total_costs:
          type: object
          properties:
            excl_vat:
              type: number
              example: 2.5
            incl_vat:
              type: number
              example: 0.66
          required:
            - excl_vat
        status:
          type: string
          enum: ["ACTIVE", "COMPLETED", "INVALID", "PENDING", "RESERVATION"]
        last_updated:
          type: string
          example: "2019-06-24T12:39:09Z"
      required:
        - country_code
        - party_id
        - id
        - start_date_time
        - kwh
        - cdr_token
        - auth_method
        - location_id
        - evse_uid
        - connector_id
        - currency
        - status
        - last_updated
    chargingPreferences:
      type: object
      properties:
        profile_type:
          type: string
          enum: ["CHEAP", "FAST", "GREEN", "REGULAR"]
        departure_time:
          type: string
          example: 2015-06-30T21:59:59Z""
        energy_need:
          type: number
          example: 1
      required:
        - profile_type
    chargingPreferencesResponse:
      type: object
      properties:
        charging_preferences:
          type: string
          enum: ["ACCEPTED", "DEPARTURE_REQUIRED", "ENERGY_NEED_REQUIRED", "NOT_POSSIBLE", "PROFILE_TYPE_NOT_SUPPORTED"]
        status_code:
          type: number
          example: 1000
        status_message:
          type: string
          example: "Success"
        timeStamp:
          type: string
          example: "2015-06-30T21:59:59Z"
      required:
        - charging_preferences
        - status_code
        - timestamp
    genericError:
      type: object
      properties:
        status_code:
          type: number
          example: 2001
        status_message:
          type: string
          example: "Missing required field: type"
        timeStamp:
          type: string
          example: "2015-06-30T21:59:59Z"
      required:
        - status_code
        - timeStamp