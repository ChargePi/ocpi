---
openapi: "3.1.0"
info:
  version: 1.0.0
  title: OCPI credentials module
  description: Specification for OCPIs credentials handlers
paths:
  /ocpi/2.2.1/credentials:
    get:
      description: "Retrieves the credentials object to access the server's platform.\
      \ The request body is empty, the response contains the credentials object to \
      \ access the server's platform. This credentials object also contains extra \
      \ information about the server such as its business details."
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/credentials'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
          description: errorGeneric
      summary: Get the credentials object
    post:
      description: "Provides the server with credentials to access the client's system.\
      \ This credentials object also contains extra information about the client such\
      \ as its business details. A POST initiates the registration process for this endpoint's\
      \ version. The server must also fetch the client's endpoints for this version. OCPI 2.2.1\
      \ If successful, the server must generate a new credentials token and respond with the\
      \ client's new credentials to access the server's system. The credentials object in the\
      \ response also contains extra information about the server such as its business details.\
      \ This method MUST return a HTTP status code 405: method not allowed if the client has\
      \ already been registered before."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/credentials'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/credentials'
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
          description: errorGeneric
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
          description: errorGeneric
      summary: Provides the credentials object
    put:
      description: "Provides the server with updated credentials to access the client's system.\
      \ This credentials object also contains extra information about the client such as its\
      \ businessdetails. A PUT will switch to the version that contains this credentials endpoint\
      \ if it's different from the current version. The server must fetch the client's endpoints\
      \ again, even if the version has not changed. If successful, the server must generate a new\
      \ credentials token for the client and respond with the client's updated credentials to access\
      \ the server's system. The credentials object in the response also contains extra information\
      \ about the server such as its business details. This method MUST return a HTTP status code 405:\
      \ method not allowed if the client has not been registered yet."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/credentials'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/credentials'
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
          description: errorGeneric
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
          description: errorGeneric
      summary: Provides updated credentials object
    delete:
      description: "Informs the server that its credentials to access the client's system are now\
      \ invalid and can no longer be used. Both parties must end any automated communication.\
      \ This is the unregistration process. This method MUST return a HTTP status code 405:\
      \ method not allowed if the client has not been registered before."
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/credentials'
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
          description: errorGeneric
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
          description: errorGeneric
      summary: Informs that credentials are invalid
components:
  schemas:
    credentials:
      type: object
      properties:
        data:
          type: object
          properties:
            token:
              type: string
              example: "ebf3b399-779f-4497-9b9d-ac6ad3cc44d2"
            url:
              type: string
              example: "https://example.com/ocpi/versions/"
            roles:
              type: object
              properties:
                role:
                  type:
                    $ref: '#/components/schemas/roleType'
                  example: "CPO"
                business_details:
                  type: object
                  properties:
                    name:
                      type: string
                      example: "Example Operator"
                    website:
                      type: string
                      example: "http://example.com"
                    logo:
                      type: object
                      properties:
                        url:
                          type: string
                          example: "https://example.com/img/logo.jpg"
                        thumbnail:
                          type: string
                          example: "https://example.com/img/logo_thumb.jpg"
                        category:
                          type:
                            $ref: '#/components/schemas/imageCategoryType'
                          example: "OPERATOR"
                        type:
                          type: string
                          example: "jpeg"
                        width:
                          type: number
                          example: 512
                        height:
                          type: number
                          example: 512
                      required:
                        - url
                        - category
                        - type
                required:
                  - name
                party_id:
                  type: string
                  example: "EXA"
                country_code:
                  type: string
                  example: "CZ"
            required:
              - role
              - business_details
              - party_id
              - country_code
          required:
            - token
            - url
        status_code:
          type: number
          example: 1000
        status_message:
          type: string
          example: "Success"
        timeStamp:
          type: string
          example: "2015-06-30T21:59:59Z"
      required:
        - status_code
        - timestamp
    roleType:
      description: "Type of role"
      enum:
      - "CPO"
      - "EMSP"
      - "HUB"
      - "NAP"
      - "NSP"
      - "OTHER"
      - "SCSP"
      type: string
    imageCategoryType:
      description: "The category of an image to obtain the correct usage in a user presentation."
      enum:
      - "CHARGER"
      - "ENTRANCE"
      - "LOCATION"
      - "NETWORK"
      - "OPERATOR"
      - "OTHER"
      - "OWNER"
    errorGeneric:
      type: object
      properties:
        status_code:
          type: number
          example: 3003
        status_message:
          type: string
          example: "Required endpoints not available"
        timeStamp:
          type: string
          example: "2015-06-30T21:59:59Z"
      required:
        - status_code
        - timeStamp