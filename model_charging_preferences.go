/*
OCPI sessions module

Specification for OCPIs sessions handlers

API version: 2.2.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package OCPI

import (
	"encoding/json"
)

// checks if the ChargingPreferences type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChargingPreferences{}

// ChargingPreferences struct for ChargingPreferences
type ChargingPreferences struct {
	ProfileType string `json:"profile_type"`
	DepartureTime *string `json:"departure_time,omitempty"`
	EnergyNeed *float32 `json:"energy_need,omitempty"`
}

// NewChargingPreferences instantiates a new ChargingPreferences object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChargingPreferences(profileType string) *ChargingPreferences {
	this := ChargingPreferences{}
	this.ProfileType = profileType
	return &this
}

// NewChargingPreferencesWithDefaults instantiates a new ChargingPreferences object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChargingPreferencesWithDefaults() *ChargingPreferences {
	this := ChargingPreferences{}
	return &this
}

// GetProfileType returns the ProfileType field value
func (o *ChargingPreferences) GetProfileType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProfileType
}

// GetProfileTypeOk returns a tuple with the ProfileType field value
// and a boolean to check if the value has been set.
func (o *ChargingPreferences) GetProfileTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProfileType, true
}

// SetProfileType sets field value
func (o *ChargingPreferences) SetProfileType(v string) {
	o.ProfileType = v
}

// GetDepartureTime returns the DepartureTime field value if set, zero value otherwise.
func (o *ChargingPreferences) GetDepartureTime() string {
	if o == nil || IsNil(o.DepartureTime) {
		var ret string
		return ret
	}
	return *o.DepartureTime
}

// GetDepartureTimeOk returns a tuple with the DepartureTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChargingPreferences) GetDepartureTimeOk() (*string, bool) {
	if o == nil || IsNil(o.DepartureTime) {
		return nil, false
	}
	return o.DepartureTime, true
}

// HasDepartureTime returns a boolean if a field has been set.
func (o *ChargingPreferences) HasDepartureTime() bool {
	if o != nil && !IsNil(o.DepartureTime) {
		return true
	}

	return false
}

// SetDepartureTime gets a reference to the given string and assigns it to the DepartureTime field.
func (o *ChargingPreferences) SetDepartureTime(v string) {
	o.DepartureTime = &v
}

// GetEnergyNeed returns the EnergyNeed field value if set, zero value otherwise.
func (o *ChargingPreferences) GetEnergyNeed() float32 {
	if o == nil || IsNil(o.EnergyNeed) {
		var ret float32
		return ret
	}
	return *o.EnergyNeed
}

// GetEnergyNeedOk returns a tuple with the EnergyNeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChargingPreferences) GetEnergyNeedOk() (*float32, bool) {
	if o == nil || IsNil(o.EnergyNeed) {
		return nil, false
	}
	return o.EnergyNeed, true
}

// HasEnergyNeed returns a boolean if a field has been set.
func (o *ChargingPreferences) HasEnergyNeed() bool {
	if o != nil && !IsNil(o.EnergyNeed) {
		return true
	}

	return false
}

// SetEnergyNeed gets a reference to the given float32 and assigns it to the EnergyNeed field.
func (o *ChargingPreferences) SetEnergyNeed(v float32) {
	o.EnergyNeed = &v
}

func (o ChargingPreferences) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChargingPreferences) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["profile_type"] = o.ProfileType
	if !IsNil(o.DepartureTime) {
		toSerialize["departure_time"] = o.DepartureTime
	}
	if !IsNil(o.EnergyNeed) {
		toSerialize["energy_need"] = o.EnergyNeed
	}
	return toSerialize, nil
}

type NullableChargingPreferences struct {
	value *ChargingPreferences
	isSet bool
}

func (v NullableChargingPreferences) Get() *ChargingPreferences {
	return v.value
}

func (v *NullableChargingPreferences) Set(val *ChargingPreferences) {
	v.value = val
	v.isSet = true
}

func (v NullableChargingPreferences) IsSet() bool {
	return v.isSet
}

func (v *NullableChargingPreferences) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChargingPreferences(val *ChargingPreferences) *NullableChargingPreferences {
	return &NullableChargingPreferences{value: val, isSet: true}
}

func (v NullableChargingPreferences) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChargingPreferences) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


