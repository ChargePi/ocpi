/*
OCPI modules

Specification for OCPIs modules handlers

API version: 2.2.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package OCPI

import (
	"encoding/json"
)

// checks if the CdrsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CdrsResponse{}

// CdrsResponse struct for CdrsResponse
type CdrsResponse struct {
	Cdrs *CdrBody `json:"cdrs,omitempty"`
	StatusCode float32 `json:"status_code"`
	StatusMessage *string `json:"status_message,omitempty"`
	TimeStamp *string `json:"timeStamp,omitempty"`
}

// NewCdrsResponse instantiates a new CdrsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCdrsResponse(statusCode float32) *CdrsResponse {
	this := CdrsResponse{}
	this.StatusCode = statusCode
	return &this
}

// NewCdrsResponseWithDefaults instantiates a new CdrsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCdrsResponseWithDefaults() *CdrsResponse {
	this := CdrsResponse{}
	return &this
}

// GetCdrs returns the Cdrs field value if set, zero value otherwise.
func (o *CdrsResponse) GetCdrs() CdrBody {
	if o == nil || IsNil(o.Cdrs) {
		var ret CdrBody
		return ret
	}
	return *o.Cdrs
}

// GetCdrsOk returns a tuple with the Cdrs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdrsResponse) GetCdrsOk() (*CdrBody, bool) {
	if o == nil || IsNil(o.Cdrs) {
		return nil, false
	}
	return o.Cdrs, true
}

// HasCdrs returns a boolean if a field has been set.
func (o *CdrsResponse) HasCdrs() bool {
	if o != nil && !IsNil(o.Cdrs) {
		return true
	}

	return false
}

// SetCdrs gets a reference to the given CdrBody and assigns it to the Cdrs field.
func (o *CdrsResponse) SetCdrs(v CdrBody) {
	o.Cdrs = &v
}

// GetStatusCode returns the StatusCode field value
func (o *CdrsResponse) GetStatusCode() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.StatusCode
}

// GetStatusCodeOk returns a tuple with the StatusCode field value
// and a boolean to check if the value has been set.
func (o *CdrsResponse) GetStatusCodeOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StatusCode, true
}

// SetStatusCode sets field value
func (o *CdrsResponse) SetStatusCode(v float32) {
	o.StatusCode = v
}

// GetStatusMessage returns the StatusMessage field value if set, zero value otherwise.
func (o *CdrsResponse) GetStatusMessage() string {
	if o == nil || IsNil(o.StatusMessage) {
		var ret string
		return ret
	}
	return *o.StatusMessage
}

// GetStatusMessageOk returns a tuple with the StatusMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdrsResponse) GetStatusMessageOk() (*string, bool) {
	if o == nil || IsNil(o.StatusMessage) {
		return nil, false
	}
	return o.StatusMessage, true
}

// HasStatusMessage returns a boolean if a field has been set.
func (o *CdrsResponse) HasStatusMessage() bool {
	if o != nil && !IsNil(o.StatusMessage) {
		return true
	}

	return false
}

// SetStatusMessage gets a reference to the given string and assigns it to the StatusMessage field.
func (o *CdrsResponse) SetStatusMessage(v string) {
	o.StatusMessage = &v
}

// GetTimeStamp returns the TimeStamp field value if set, zero value otherwise.
func (o *CdrsResponse) GetTimeStamp() string {
	if o == nil || IsNil(o.TimeStamp) {
		var ret string
		return ret
	}
	return *o.TimeStamp
}

// GetTimeStampOk returns a tuple with the TimeStamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdrsResponse) GetTimeStampOk() (*string, bool) {
	if o == nil || IsNil(o.TimeStamp) {
		return nil, false
	}
	return o.TimeStamp, true
}

// HasTimeStamp returns a boolean if a field has been set.
func (o *CdrsResponse) HasTimeStamp() bool {
	if o != nil && !IsNil(o.TimeStamp) {
		return true
	}

	return false
}

// SetTimeStamp gets a reference to the given string and assigns it to the TimeStamp field.
func (o *CdrsResponse) SetTimeStamp(v string) {
	o.TimeStamp = &v
}

func (o CdrsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CdrsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cdrs) {
		toSerialize["cdrs"] = o.Cdrs
	}
	toSerialize["status_code"] = o.StatusCode
	if !IsNil(o.StatusMessage) {
		toSerialize["status_message"] = o.StatusMessage
	}
	if !IsNil(o.TimeStamp) {
		toSerialize["timeStamp"] = o.TimeStamp
	}
	return toSerialize, nil
}

type NullableCdrsResponse struct {
	value *CdrsResponse
	isSet bool
}

func (v NullableCdrsResponse) Get() *CdrsResponse {
	return v.value
}

func (v *NullableCdrsResponse) Set(val *CdrsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCdrsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCdrsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCdrsResponse(val *CdrsResponse) *NullableCdrsResponse {
	return &NullableCdrsResponse{value: val, isSet: true}
}

func (v NullableCdrsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCdrsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


