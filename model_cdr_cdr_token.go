/*
OCPI CDRs module

Specification for OCPIs CDRs handlers

API version: 2.2.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package OCPI

import (
	"encoding/json"
)

// checks if the CdrCdrToken type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CdrCdrToken{}

// CdrCdrToken struct for CdrCdrToken
type CdrCdrToken struct {
	CountryCode string `json:"country_code"`
	PartyId string `json:"party_id"`
	Uid string `json:"uid"`
	Type string `json:"type"`
	ContractId string `json:"contract_id"`
}

// NewCdrCdrToken instantiates a new CdrCdrToken object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCdrCdrToken(countryCode string, partyId string, uid string, type_ string, contractId string) *CdrCdrToken {
	this := CdrCdrToken{}
	this.CountryCode = countryCode
	this.PartyId = partyId
	this.Uid = uid
	this.Type = type_
	this.ContractId = contractId
	return &this
}

// NewCdrCdrTokenWithDefaults instantiates a new CdrCdrToken object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCdrCdrTokenWithDefaults() *CdrCdrToken {
	this := CdrCdrToken{}
	return &this
}

// GetCountryCode returns the CountryCode field value
func (o *CdrCdrToken) GetCountryCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CountryCode
}

// GetCountryCodeOk returns a tuple with the CountryCode field value
// and a boolean to check if the value has been set.
func (o *CdrCdrToken) GetCountryCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CountryCode, true
}

// SetCountryCode sets field value
func (o *CdrCdrToken) SetCountryCode(v string) {
	o.CountryCode = v
}

// GetPartyId returns the PartyId field value
func (o *CdrCdrToken) GetPartyId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PartyId
}

// GetPartyIdOk returns a tuple with the PartyId field value
// and a boolean to check if the value has been set.
func (o *CdrCdrToken) GetPartyIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PartyId, true
}

// SetPartyId sets field value
func (o *CdrCdrToken) SetPartyId(v string) {
	o.PartyId = v
}

// GetUid returns the Uid field value
func (o *CdrCdrToken) GetUid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uid
}

// GetUidOk returns a tuple with the Uid field value
// and a boolean to check if the value has been set.
func (o *CdrCdrToken) GetUidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Uid, true
}

// SetUid sets field value
func (o *CdrCdrToken) SetUid(v string) {
	o.Uid = v
}

// GetType returns the Type field value
func (o *CdrCdrToken) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *CdrCdrToken) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *CdrCdrToken) SetType(v string) {
	o.Type = v
}

// GetContractId returns the ContractId field value
func (o *CdrCdrToken) GetContractId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ContractId
}

// GetContractIdOk returns a tuple with the ContractId field value
// and a boolean to check if the value has been set.
func (o *CdrCdrToken) GetContractIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ContractId, true
}

// SetContractId sets field value
func (o *CdrCdrToken) SetContractId(v string) {
	o.ContractId = v
}

func (o CdrCdrToken) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CdrCdrToken) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["country_code"] = o.CountryCode
	toSerialize["party_id"] = o.PartyId
	toSerialize["uid"] = o.Uid
	toSerialize["type"] = o.Type
	toSerialize["contract_id"] = o.ContractId
	return toSerialize, nil
}

type NullableCdrCdrToken struct {
	value *CdrCdrToken
	isSet bool
}

func (v NullableCdrCdrToken) Get() *CdrCdrToken {
	return v.value
}

func (v *NullableCdrCdrToken) Set(val *CdrCdrToken) {
	v.value = val
	v.isSet = true
}

func (v NullableCdrCdrToken) IsSet() bool {
	return v.isSet
}

func (v *NullableCdrCdrToken) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCdrCdrToken(val *CdrCdrToken) *NullableCdrCdrToken {
	return &NullableCdrCdrToken{value: val, isSet: true}
}

func (v NullableCdrCdrToken) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCdrCdrToken) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


