/*
OCPI modules

Specification for OCPIs modules handlers

API version: 2.2.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package OCPI

import (
	"encoding/json"
)

// checks if the CdrCdrLocation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CdrCdrLocation{}

// CdrCdrLocation struct for CdrCdrLocation
type CdrCdrLocation struct {
	Id *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Address *string `json:"address,omitempty"`
	City *string `json:"city,omitempty"`
	PostalCode *string `json:"postal_code,omitempty"`
	State *string `json:"state,omitempty"`
	Country *string `json:"country,omitempty"`
	Coordinates *CdrCdrLocationCoordinates `json:"coordinates,omitempty"`
	EvseUid *string `json:"evse_uid,omitempty"`
	EvseId *string `json:"evse_id,omitempty"`
	ConnectorId *string `json:"connector_id,omitempty"`
	ConnectorStandard *string `json:"connector_standard,omitempty"`
	ConnectorFormat *string `json:"connector_format,omitempty"`
	ConnectorPowerType *string `json:"connector_power_type,omitempty"`
}

// NewCdrCdrLocation instantiates a new CdrCdrLocation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCdrCdrLocation() *CdrCdrLocation {
	this := CdrCdrLocation{}
	return &this
}

// NewCdrCdrLocationWithDefaults instantiates a new CdrCdrLocation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCdrCdrLocationWithDefaults() *CdrCdrLocation {
	this := CdrCdrLocation{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CdrCdrLocation) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdrCdrLocation) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CdrCdrLocation) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CdrCdrLocation) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CdrCdrLocation) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdrCdrLocation) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CdrCdrLocation) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CdrCdrLocation) SetName(v string) {
	o.Name = &v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *CdrCdrLocation) GetAddress() string {
	if o == nil || IsNil(o.Address) {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdrCdrLocation) GetAddressOk() (*string, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *CdrCdrLocation) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *CdrCdrLocation) SetAddress(v string) {
	o.Address = &v
}

// GetCity returns the City field value if set, zero value otherwise.
func (o *CdrCdrLocation) GetCity() string {
	if o == nil || IsNil(o.City) {
		var ret string
		return ret
	}
	return *o.City
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdrCdrLocation) GetCityOk() (*string, bool) {
	if o == nil || IsNil(o.City) {
		return nil, false
	}
	return o.City, true
}

// HasCity returns a boolean if a field has been set.
func (o *CdrCdrLocation) HasCity() bool {
	if o != nil && !IsNil(o.City) {
		return true
	}

	return false
}

// SetCity gets a reference to the given string and assigns it to the City field.
func (o *CdrCdrLocation) SetCity(v string) {
	o.City = &v
}

// GetPostalCode returns the PostalCode field value if set, zero value otherwise.
func (o *CdrCdrLocation) GetPostalCode() string {
	if o == nil || IsNil(o.PostalCode) {
		var ret string
		return ret
	}
	return *o.PostalCode
}

// GetPostalCodeOk returns a tuple with the PostalCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdrCdrLocation) GetPostalCodeOk() (*string, bool) {
	if o == nil || IsNil(o.PostalCode) {
		return nil, false
	}
	return o.PostalCode, true
}

// HasPostalCode returns a boolean if a field has been set.
func (o *CdrCdrLocation) HasPostalCode() bool {
	if o != nil && !IsNil(o.PostalCode) {
		return true
	}

	return false
}

// SetPostalCode gets a reference to the given string and assigns it to the PostalCode field.
func (o *CdrCdrLocation) SetPostalCode(v string) {
	o.PostalCode = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *CdrCdrLocation) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdrCdrLocation) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *CdrCdrLocation) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *CdrCdrLocation) SetState(v string) {
	o.State = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *CdrCdrLocation) GetCountry() string {
	if o == nil || IsNil(o.Country) {
		var ret string
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdrCdrLocation) GetCountryOk() (*string, bool) {
	if o == nil || IsNil(o.Country) {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *CdrCdrLocation) HasCountry() bool {
	if o != nil && !IsNil(o.Country) {
		return true
	}

	return false
}

// SetCountry gets a reference to the given string and assigns it to the Country field.
func (o *CdrCdrLocation) SetCountry(v string) {
	o.Country = &v
}

// GetCoordinates returns the Coordinates field value if set, zero value otherwise.
func (o *CdrCdrLocation) GetCoordinates() CdrCdrLocationCoordinates {
	if o == nil || IsNil(o.Coordinates) {
		var ret CdrCdrLocationCoordinates
		return ret
	}
	return *o.Coordinates
}

// GetCoordinatesOk returns a tuple with the Coordinates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdrCdrLocation) GetCoordinatesOk() (*CdrCdrLocationCoordinates, bool) {
	if o == nil || IsNil(o.Coordinates) {
		return nil, false
	}
	return o.Coordinates, true
}

// HasCoordinates returns a boolean if a field has been set.
func (o *CdrCdrLocation) HasCoordinates() bool {
	if o != nil && !IsNil(o.Coordinates) {
		return true
	}

	return false
}

// SetCoordinates gets a reference to the given CdrCdrLocationCoordinates and assigns it to the Coordinates field.
func (o *CdrCdrLocation) SetCoordinates(v CdrCdrLocationCoordinates) {
	o.Coordinates = &v
}

// GetEvseUid returns the EvseUid field value if set, zero value otherwise.
func (o *CdrCdrLocation) GetEvseUid() string {
	if o == nil || IsNil(o.EvseUid) {
		var ret string
		return ret
	}
	return *o.EvseUid
}

// GetEvseUidOk returns a tuple with the EvseUid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdrCdrLocation) GetEvseUidOk() (*string, bool) {
	if o == nil || IsNil(o.EvseUid) {
		return nil, false
	}
	return o.EvseUid, true
}

// HasEvseUid returns a boolean if a field has been set.
func (o *CdrCdrLocation) HasEvseUid() bool {
	if o != nil && !IsNil(o.EvseUid) {
		return true
	}

	return false
}

// SetEvseUid gets a reference to the given string and assigns it to the EvseUid field.
func (o *CdrCdrLocation) SetEvseUid(v string) {
	o.EvseUid = &v
}

// GetEvseId returns the EvseId field value if set, zero value otherwise.
func (o *CdrCdrLocation) GetEvseId() string {
	if o == nil || IsNil(o.EvseId) {
		var ret string
		return ret
	}
	return *o.EvseId
}

// GetEvseIdOk returns a tuple with the EvseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdrCdrLocation) GetEvseIdOk() (*string, bool) {
	if o == nil || IsNil(o.EvseId) {
		return nil, false
	}
	return o.EvseId, true
}

// HasEvseId returns a boolean if a field has been set.
func (o *CdrCdrLocation) HasEvseId() bool {
	if o != nil && !IsNil(o.EvseId) {
		return true
	}

	return false
}

// SetEvseId gets a reference to the given string and assigns it to the EvseId field.
func (o *CdrCdrLocation) SetEvseId(v string) {
	o.EvseId = &v
}

// GetConnectorId returns the ConnectorId field value if set, zero value otherwise.
func (o *CdrCdrLocation) GetConnectorId() string {
	if o == nil || IsNil(o.ConnectorId) {
		var ret string
		return ret
	}
	return *o.ConnectorId
}

// GetConnectorIdOk returns a tuple with the ConnectorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdrCdrLocation) GetConnectorIdOk() (*string, bool) {
	if o == nil || IsNil(o.ConnectorId) {
		return nil, false
	}
	return o.ConnectorId, true
}

// HasConnectorId returns a boolean if a field has been set.
func (o *CdrCdrLocation) HasConnectorId() bool {
	if o != nil && !IsNil(o.ConnectorId) {
		return true
	}

	return false
}

// SetConnectorId gets a reference to the given string and assigns it to the ConnectorId field.
func (o *CdrCdrLocation) SetConnectorId(v string) {
	o.ConnectorId = &v
}

// GetConnectorStandard returns the ConnectorStandard field value if set, zero value otherwise.
func (o *CdrCdrLocation) GetConnectorStandard() string {
	if o == nil || IsNil(o.ConnectorStandard) {
		var ret string
		return ret
	}
	return *o.ConnectorStandard
}

// GetConnectorStandardOk returns a tuple with the ConnectorStandard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdrCdrLocation) GetConnectorStandardOk() (*string, bool) {
	if o == nil || IsNil(o.ConnectorStandard) {
		return nil, false
	}
	return o.ConnectorStandard, true
}

// HasConnectorStandard returns a boolean if a field has been set.
func (o *CdrCdrLocation) HasConnectorStandard() bool {
	if o != nil && !IsNil(o.ConnectorStandard) {
		return true
	}

	return false
}

// SetConnectorStandard gets a reference to the given string and assigns it to the ConnectorStandard field.
func (o *CdrCdrLocation) SetConnectorStandard(v string) {
	o.ConnectorStandard = &v
}

// GetConnectorFormat returns the ConnectorFormat field value if set, zero value otherwise.
func (o *CdrCdrLocation) GetConnectorFormat() string {
	if o == nil || IsNil(o.ConnectorFormat) {
		var ret string
		return ret
	}
	return *o.ConnectorFormat
}

// GetConnectorFormatOk returns a tuple with the ConnectorFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdrCdrLocation) GetConnectorFormatOk() (*string, bool) {
	if o == nil || IsNil(o.ConnectorFormat) {
		return nil, false
	}
	return o.ConnectorFormat, true
}

// HasConnectorFormat returns a boolean if a field has been set.
func (o *CdrCdrLocation) HasConnectorFormat() bool {
	if o != nil && !IsNil(o.ConnectorFormat) {
		return true
	}

	return false
}

// SetConnectorFormat gets a reference to the given string and assigns it to the ConnectorFormat field.
func (o *CdrCdrLocation) SetConnectorFormat(v string) {
	o.ConnectorFormat = &v
}

// GetConnectorPowerType returns the ConnectorPowerType field value if set, zero value otherwise.
func (o *CdrCdrLocation) GetConnectorPowerType() string {
	if o == nil || IsNil(o.ConnectorPowerType) {
		var ret string
		return ret
	}
	return *o.ConnectorPowerType
}

// GetConnectorPowerTypeOk returns a tuple with the ConnectorPowerType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdrCdrLocation) GetConnectorPowerTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ConnectorPowerType) {
		return nil, false
	}
	return o.ConnectorPowerType, true
}

// HasConnectorPowerType returns a boolean if a field has been set.
func (o *CdrCdrLocation) HasConnectorPowerType() bool {
	if o != nil && !IsNil(o.ConnectorPowerType) {
		return true
	}

	return false
}

// SetConnectorPowerType gets a reference to the given string and assigns it to the ConnectorPowerType field.
func (o *CdrCdrLocation) SetConnectorPowerType(v string) {
	o.ConnectorPowerType = &v
}

func (o CdrCdrLocation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CdrCdrLocation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.City) {
		toSerialize["city"] = o.City
	}
	if !IsNil(o.PostalCode) {
		toSerialize["postal_code"] = o.PostalCode
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.Country) {
		toSerialize["country"] = o.Country
	}
	if !IsNil(o.Coordinates) {
		toSerialize["coordinates"] = o.Coordinates
	}
	if !IsNil(o.EvseUid) {
		toSerialize["evse_uid"] = o.EvseUid
	}
	if !IsNil(o.EvseId) {
		toSerialize["evse_id"] = o.EvseId
	}
	if !IsNil(o.ConnectorId) {
		toSerialize["connector_id"] = o.ConnectorId
	}
	if !IsNil(o.ConnectorStandard) {
		toSerialize["connector_standard"] = o.ConnectorStandard
	}
	if !IsNil(o.ConnectorFormat) {
		toSerialize["connector_format"] = o.ConnectorFormat
	}
	if !IsNil(o.ConnectorPowerType) {
		toSerialize["connector_power_type"] = o.ConnectorPowerType
	}
	return toSerialize, nil
}

type NullableCdrCdrLocation struct {
	value *CdrCdrLocation
	isSet bool
}

func (v NullableCdrCdrLocation) Get() *CdrCdrLocation {
	return v.value
}

func (v *NullableCdrCdrLocation) Set(val *CdrCdrLocation) {
	v.value = val
	v.isSet = true
}

func (v NullableCdrCdrLocation) IsSet() bool {
	return v.isSet
}

func (v *NullableCdrCdrLocation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCdrCdrLocation(val *CdrCdrLocation) *NullableCdrCdrLocation {
	return &NullableCdrCdrLocation{value: val, isSet: true}
}

func (v NullableCdrCdrLocation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCdrCdrLocation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


