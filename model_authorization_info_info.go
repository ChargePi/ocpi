/*
OCPI tokens module

Specification for OCPIs tokens handlers

API version: 2.2.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package OCPI

import (
	"encoding/json"
)

// checks if the AuthorizationInfoInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthorizationInfoInfo{}

// AuthorizationInfoInfo struct for AuthorizationInfoInfo
type AuthorizationInfoInfo struct {
	Language string `json:"language"`
	Text string `json:"text"`
}

// NewAuthorizationInfoInfo instantiates a new AuthorizationInfoInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthorizationInfoInfo(language string, text string) *AuthorizationInfoInfo {
	this := AuthorizationInfoInfo{}
	this.Language = language
	this.Text = text
	return &this
}

// NewAuthorizationInfoInfoWithDefaults instantiates a new AuthorizationInfoInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthorizationInfoInfoWithDefaults() *AuthorizationInfoInfo {
	this := AuthorizationInfoInfo{}
	return &this
}

// GetLanguage returns the Language field value
func (o *AuthorizationInfoInfo) GetLanguage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Language
}

// GetLanguageOk returns a tuple with the Language field value
// and a boolean to check if the value has been set.
func (o *AuthorizationInfoInfo) GetLanguageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Language, true
}

// SetLanguage sets field value
func (o *AuthorizationInfoInfo) SetLanguage(v string) {
	o.Language = v
}

// GetText returns the Text field value
func (o *AuthorizationInfoInfo) GetText() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Text
}

// GetTextOk returns a tuple with the Text field value
// and a boolean to check if the value has been set.
func (o *AuthorizationInfoInfo) GetTextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Text, true
}

// SetText sets field value
func (o *AuthorizationInfoInfo) SetText(v string) {
	o.Text = v
}

func (o AuthorizationInfoInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthorizationInfoInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["language"] = o.Language
	toSerialize["text"] = o.Text
	return toSerialize, nil
}

type NullableAuthorizationInfoInfo struct {
	value *AuthorizationInfoInfo
	isSet bool
}

func (v NullableAuthorizationInfoInfo) Get() *AuthorizationInfoInfo {
	return v.value
}

func (v *NullableAuthorizationInfoInfo) Set(val *AuthorizationInfoInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthorizationInfoInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthorizationInfoInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthorizationInfoInfo(val *AuthorizationInfoInfo) *NullableAuthorizationInfoInfo {
	return &NullableAuthorizationInfoInfo{value: val, isSet: true}
}

func (v NullableAuthorizationInfoInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthorizationInfoInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


