/*
OCPI charging profiles module

Specification for OCPIs charging profiles handlers

API version: 2.2.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package OCPI

import (
	"encoding/json"
	"fmt"
)

// OcpiChargingprofilePostRequest - struct for OcpiChargingprofilePostRequest
type OcpiChargingprofilePostRequest struct {
	ActiveChargingProfileResult *ActiveChargingProfileResult
	ChargingProfileResult *ChargingProfileResult
	ClearProfileResult *ClearProfileResult
}

// ActiveChargingProfileResultAsOcpiChargingprofilePostRequest is a convenience function that returns ActiveChargingProfileResult wrapped in OcpiChargingprofilePostRequest
func ActiveChargingProfileResultAsOcpiChargingprofilePostRequest(v *ActiveChargingProfileResult) OcpiChargingprofilePostRequest {
	return OcpiChargingprofilePostRequest{
		ActiveChargingProfileResult: v,
	}
}

// ChargingProfileResultAsOcpiChargingprofilePostRequest is a convenience function that returns ChargingProfileResult wrapped in OcpiChargingprofilePostRequest
func ChargingProfileResultAsOcpiChargingprofilePostRequest(v *ChargingProfileResult) OcpiChargingprofilePostRequest {
	return OcpiChargingprofilePostRequest{
		ChargingProfileResult: v,
	}
}

// ClearProfileResultAsOcpiChargingprofilePostRequest is a convenience function that returns ClearProfileResult wrapped in OcpiChargingprofilePostRequest
func ClearProfileResultAsOcpiChargingprofilePostRequest(v *ClearProfileResult) OcpiChargingprofilePostRequest {
	return OcpiChargingprofilePostRequest{
		ClearProfileResult: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *OcpiChargingprofilePostRequest) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ActiveChargingProfileResult
	err = newStrictDecoder(data).Decode(&dst.ActiveChargingProfileResult)
	if err == nil {
		jsonActiveChargingProfileResult, _ := json.Marshal(dst.ActiveChargingProfileResult)
		if string(jsonActiveChargingProfileResult) == "{}" { // empty struct
			dst.ActiveChargingProfileResult = nil
		} else {
			match++
		}
	} else {
		dst.ActiveChargingProfileResult = nil
	}

	// try to unmarshal data into ChargingProfileResult
	err = newStrictDecoder(data).Decode(&dst.ChargingProfileResult)
	if err == nil {
		jsonChargingProfileResult, _ := json.Marshal(dst.ChargingProfileResult)
		if string(jsonChargingProfileResult) == "{}" { // empty struct
			dst.ChargingProfileResult = nil
		} else {
			match++
		}
	} else {
		dst.ChargingProfileResult = nil
	}

	// try to unmarshal data into ClearProfileResult
	err = newStrictDecoder(data).Decode(&dst.ClearProfileResult)
	if err == nil {
		jsonClearProfileResult, _ := json.Marshal(dst.ClearProfileResult)
		if string(jsonClearProfileResult) == "{}" { // empty struct
			dst.ClearProfileResult = nil
		} else {
			match++
		}
	} else {
		dst.ClearProfileResult = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ActiveChargingProfileResult = nil
		dst.ChargingProfileResult = nil
		dst.ClearProfileResult = nil

		return fmt.Errorf("data matches more than one schema in oneOf(OcpiChargingprofilePostRequest)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(OcpiChargingprofilePostRequest)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src OcpiChargingprofilePostRequest) MarshalJSON() ([]byte, error) {
	if src.ActiveChargingProfileResult != nil {
		return json.Marshal(&src.ActiveChargingProfileResult)
	}

	if src.ChargingProfileResult != nil {
		return json.Marshal(&src.ChargingProfileResult)
	}

	if src.ClearProfileResult != nil {
		return json.Marshal(&src.ClearProfileResult)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *OcpiChargingprofilePostRequest) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.ActiveChargingProfileResult != nil {
		return obj.ActiveChargingProfileResult
	}

	if obj.ChargingProfileResult != nil {
		return obj.ChargingProfileResult
	}

	if obj.ClearProfileResult != nil {
		return obj.ClearProfileResult
	}

	// all schemas are nil
	return nil
}

type NullableOcpiChargingprofilePostRequest struct {
	value *OcpiChargingprofilePostRequest
	isSet bool
}

func (v NullableOcpiChargingprofilePostRequest) Get() *OcpiChargingprofilePostRequest {
	return v.value
}

func (v *NullableOcpiChargingprofilePostRequest) Set(val *OcpiChargingprofilePostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableOcpiChargingprofilePostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableOcpiChargingprofilePostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOcpiChargingprofilePostRequest(val *OcpiChargingprofilePostRequest) *NullableOcpiChargingprofilePostRequest {
	return &NullableOcpiChargingprofilePostRequest{value: val, isSet: true}
}

func (v NullableOcpiChargingprofilePostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOcpiChargingprofilePostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


