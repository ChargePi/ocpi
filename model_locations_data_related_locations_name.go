/*
OCPI locations module

Specification for OCPIs locations handlers

API version: 2.2.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package OCPI

import (
	"encoding/json"
)

// checks if the LocationsDataRelatedLocationsName type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LocationsDataRelatedLocationsName{}

// LocationsDataRelatedLocationsName struct for LocationsDataRelatedLocationsName
type LocationsDataRelatedLocationsName struct {
	Language string `json:"language"`
	Text string `json:"text"`
}

// NewLocationsDataRelatedLocationsName instantiates a new LocationsDataRelatedLocationsName object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLocationsDataRelatedLocationsName(language string, text string) *LocationsDataRelatedLocationsName {
	this := LocationsDataRelatedLocationsName{}
	this.Language = language
	this.Text = text
	return &this
}

// NewLocationsDataRelatedLocationsNameWithDefaults instantiates a new LocationsDataRelatedLocationsName object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLocationsDataRelatedLocationsNameWithDefaults() *LocationsDataRelatedLocationsName {
	this := LocationsDataRelatedLocationsName{}
	return &this
}

// GetLanguage returns the Language field value
func (o *LocationsDataRelatedLocationsName) GetLanguage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Language
}

// GetLanguageOk returns a tuple with the Language field value
// and a boolean to check if the value has been set.
func (o *LocationsDataRelatedLocationsName) GetLanguageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Language, true
}

// SetLanguage sets field value
func (o *LocationsDataRelatedLocationsName) SetLanguage(v string) {
	o.Language = v
}

// GetText returns the Text field value
func (o *LocationsDataRelatedLocationsName) GetText() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Text
}

// GetTextOk returns a tuple with the Text field value
// and a boolean to check if the value has been set.
func (o *LocationsDataRelatedLocationsName) GetTextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Text, true
}

// SetText sets field value
func (o *LocationsDataRelatedLocationsName) SetText(v string) {
	o.Text = v
}

func (o LocationsDataRelatedLocationsName) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LocationsDataRelatedLocationsName) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["language"] = o.Language
	toSerialize["text"] = o.Text
	return toSerialize, nil
}

type NullableLocationsDataRelatedLocationsName struct {
	value *LocationsDataRelatedLocationsName
	isSet bool
}

func (v NullableLocationsDataRelatedLocationsName) Get() *LocationsDataRelatedLocationsName {
	return v.value
}

func (v *NullableLocationsDataRelatedLocationsName) Set(val *LocationsDataRelatedLocationsName) {
	v.value = val
	v.isSet = true
}

func (v NullableLocationsDataRelatedLocationsName) IsSet() bool {
	return v.isSet
}

func (v *NullableLocationsDataRelatedLocationsName) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLocationsDataRelatedLocationsName(val *LocationsDataRelatedLocationsName) *NullableLocationsDataRelatedLocationsName {
	return &NullableLocationsDataRelatedLocationsName{value: val, isSet: true}
}

func (v NullableLocationsDataRelatedLocationsName) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLocationsDataRelatedLocationsName) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


