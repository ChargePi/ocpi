/*
OCPI locations module

Specification for OCPIs locations handlers

API version: 2.2.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package OCPI

import (
	"encoding/json"
)

// checks if the BusinessDetailsLogo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BusinessDetailsLogo{}

// BusinessDetailsLogo struct for BusinessDetailsLogo
type BusinessDetailsLogo struct {
	Url string `json:"url"`
	Thumbnail *string `json:"thumbnail,omitempty"`
	Category string `json:"category"`
	Type string `json:"type"`
	Width *float32 `json:"width,omitempty"`
	Height *float32 `json:"height,omitempty"`
}

// NewBusinessDetailsLogo instantiates a new BusinessDetailsLogo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBusinessDetailsLogo(url string, category string, type_ string) *BusinessDetailsLogo {
	this := BusinessDetailsLogo{}
	this.Url = url
	this.Category = category
	this.Type = type_
	return &this
}

// NewBusinessDetailsLogoWithDefaults instantiates a new BusinessDetailsLogo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBusinessDetailsLogoWithDefaults() *BusinessDetailsLogo {
	this := BusinessDetailsLogo{}
	return &this
}

// GetUrl returns the Url field value
func (o *BusinessDetailsLogo) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *BusinessDetailsLogo) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *BusinessDetailsLogo) SetUrl(v string) {
	o.Url = v
}

// GetThumbnail returns the Thumbnail field value if set, zero value otherwise.
func (o *BusinessDetailsLogo) GetThumbnail() string {
	if o == nil || IsNil(o.Thumbnail) {
		var ret string
		return ret
	}
	return *o.Thumbnail
}

// GetThumbnailOk returns a tuple with the Thumbnail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessDetailsLogo) GetThumbnailOk() (*string, bool) {
	if o == nil || IsNil(o.Thumbnail) {
		return nil, false
	}
	return o.Thumbnail, true
}

// HasThumbnail returns a boolean if a field has been set.
func (o *BusinessDetailsLogo) HasThumbnail() bool {
	if o != nil && !IsNil(o.Thumbnail) {
		return true
	}

	return false
}

// SetThumbnail gets a reference to the given string and assigns it to the Thumbnail field.
func (o *BusinessDetailsLogo) SetThumbnail(v string) {
	o.Thumbnail = &v
}

// GetCategory returns the Category field value
func (o *BusinessDetailsLogo) GetCategory() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Category
}

// GetCategoryOk returns a tuple with the Category field value
// and a boolean to check if the value has been set.
func (o *BusinessDetailsLogo) GetCategoryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Category, true
}

// SetCategory sets field value
func (o *BusinessDetailsLogo) SetCategory(v string) {
	o.Category = v
}

// GetType returns the Type field value
func (o *BusinessDetailsLogo) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *BusinessDetailsLogo) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *BusinessDetailsLogo) SetType(v string) {
	o.Type = v
}

// GetWidth returns the Width field value if set, zero value otherwise.
func (o *BusinessDetailsLogo) GetWidth() float32 {
	if o == nil || IsNil(o.Width) {
		var ret float32
		return ret
	}
	return *o.Width
}

// GetWidthOk returns a tuple with the Width field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessDetailsLogo) GetWidthOk() (*float32, bool) {
	if o == nil || IsNil(o.Width) {
		return nil, false
	}
	return o.Width, true
}

// HasWidth returns a boolean if a field has been set.
func (o *BusinessDetailsLogo) HasWidth() bool {
	if o != nil && !IsNil(o.Width) {
		return true
	}

	return false
}

// SetWidth gets a reference to the given float32 and assigns it to the Width field.
func (o *BusinessDetailsLogo) SetWidth(v float32) {
	o.Width = &v
}

// GetHeight returns the Height field value if set, zero value otherwise.
func (o *BusinessDetailsLogo) GetHeight() float32 {
	if o == nil || IsNil(o.Height) {
		var ret float32
		return ret
	}
	return *o.Height
}

// GetHeightOk returns a tuple with the Height field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessDetailsLogo) GetHeightOk() (*float32, bool) {
	if o == nil || IsNil(o.Height) {
		return nil, false
	}
	return o.Height, true
}

// HasHeight returns a boolean if a field has been set.
func (o *BusinessDetailsLogo) HasHeight() bool {
	if o != nil && !IsNil(o.Height) {
		return true
	}

	return false
}

// SetHeight gets a reference to the given float32 and assigns it to the Height field.
func (o *BusinessDetailsLogo) SetHeight(v float32) {
	o.Height = &v
}

func (o BusinessDetailsLogo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BusinessDetailsLogo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["url"] = o.Url
	if !IsNil(o.Thumbnail) {
		toSerialize["thumbnail"] = o.Thumbnail
	}
	toSerialize["category"] = o.Category
	toSerialize["type"] = o.Type
	if !IsNil(o.Width) {
		toSerialize["width"] = o.Width
	}
	if !IsNil(o.Height) {
		toSerialize["height"] = o.Height
	}
	return toSerialize, nil
}

type NullableBusinessDetailsLogo struct {
	value *BusinessDetailsLogo
	isSet bool
}

func (v NullableBusinessDetailsLogo) Get() *BusinessDetailsLogo {
	return v.value
}

func (v *NullableBusinessDetailsLogo) Set(val *BusinessDetailsLogo) {
	v.value = val
	v.isSet = true
}

func (v NullableBusinessDetailsLogo) IsSet() bool {
	return v.isSet
}

func (v *NullableBusinessDetailsLogo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBusinessDetailsLogo(val *BusinessDetailsLogo) *NullableBusinessDetailsLogo {
	return &NullableBusinessDetailsLogo{value: val, isSet: true}
}

func (v NullableBusinessDetailsLogo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBusinessDetailsLogo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


