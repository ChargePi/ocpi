/*
OCPI modules

Specification for OCPIs modules handlers

API version: 2.2.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package OCPI

import (
	"encoding/json"
)

// checks if the LocationsDataOpeningTimes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LocationsDataOpeningTimes{}

// LocationsDataOpeningTimes struct for LocationsDataOpeningTimes
type LocationsDataOpeningTimes struct {
	Twentyfourseven bool `json:"twentyfourseven"`
	RegularHours *LocationsDataOpeningTimesRegularHours `json:"regular_hours,omitempty"`
	ExceptionalOpenings *LocationsDataOpeningTimesExceptionalOpenings `json:"exceptional_openings,omitempty"`
	ExceptionalClosings *LocationsDataOpeningTimesExceptionalOpenings `json:"exceptional_closings,omitempty"`
}

// NewLocationsDataOpeningTimes instantiates a new LocationsDataOpeningTimes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLocationsDataOpeningTimes(twentyfourseven bool) *LocationsDataOpeningTimes {
	this := LocationsDataOpeningTimes{}
	this.Twentyfourseven = twentyfourseven
	return &this
}

// NewLocationsDataOpeningTimesWithDefaults instantiates a new LocationsDataOpeningTimes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLocationsDataOpeningTimesWithDefaults() *LocationsDataOpeningTimes {
	this := LocationsDataOpeningTimes{}
	return &this
}

// GetTwentyfourseven returns the Twentyfourseven field value
func (o *LocationsDataOpeningTimes) GetTwentyfourseven() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Twentyfourseven
}

// GetTwentyfoursevenOk returns a tuple with the Twentyfourseven field value
// and a boolean to check if the value has been set.
func (o *LocationsDataOpeningTimes) GetTwentyfoursevenOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Twentyfourseven, true
}

// SetTwentyfourseven sets field value
func (o *LocationsDataOpeningTimes) SetTwentyfourseven(v bool) {
	o.Twentyfourseven = v
}

// GetRegularHours returns the RegularHours field value if set, zero value otherwise.
func (o *LocationsDataOpeningTimes) GetRegularHours() LocationsDataOpeningTimesRegularHours {
	if o == nil || IsNil(o.RegularHours) {
		var ret LocationsDataOpeningTimesRegularHours
		return ret
	}
	return *o.RegularHours
}

// GetRegularHoursOk returns a tuple with the RegularHours field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocationsDataOpeningTimes) GetRegularHoursOk() (*LocationsDataOpeningTimesRegularHours, bool) {
	if o == nil || IsNil(o.RegularHours) {
		return nil, false
	}
	return o.RegularHours, true
}

// HasRegularHours returns a boolean if a field has been set.
func (o *LocationsDataOpeningTimes) HasRegularHours() bool {
	if o != nil && !IsNil(o.RegularHours) {
		return true
	}

	return false
}

// SetRegularHours gets a reference to the given LocationsDataOpeningTimesRegularHours and assigns it to the RegularHours field.
func (o *LocationsDataOpeningTimes) SetRegularHours(v LocationsDataOpeningTimesRegularHours) {
	o.RegularHours = &v
}

// GetExceptionalOpenings returns the ExceptionalOpenings field value if set, zero value otherwise.
func (o *LocationsDataOpeningTimes) GetExceptionalOpenings() LocationsDataOpeningTimesExceptionalOpenings {
	if o == nil || IsNil(o.ExceptionalOpenings) {
		var ret LocationsDataOpeningTimesExceptionalOpenings
		return ret
	}
	return *o.ExceptionalOpenings
}

// GetExceptionalOpeningsOk returns a tuple with the ExceptionalOpenings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocationsDataOpeningTimes) GetExceptionalOpeningsOk() (*LocationsDataOpeningTimesExceptionalOpenings, bool) {
	if o == nil || IsNil(o.ExceptionalOpenings) {
		return nil, false
	}
	return o.ExceptionalOpenings, true
}

// HasExceptionalOpenings returns a boolean if a field has been set.
func (o *LocationsDataOpeningTimes) HasExceptionalOpenings() bool {
	if o != nil && !IsNil(o.ExceptionalOpenings) {
		return true
	}

	return false
}

// SetExceptionalOpenings gets a reference to the given LocationsDataOpeningTimesExceptionalOpenings and assigns it to the ExceptionalOpenings field.
func (o *LocationsDataOpeningTimes) SetExceptionalOpenings(v LocationsDataOpeningTimesExceptionalOpenings) {
	o.ExceptionalOpenings = &v
}

// GetExceptionalClosings returns the ExceptionalClosings field value if set, zero value otherwise.
func (o *LocationsDataOpeningTimes) GetExceptionalClosings() LocationsDataOpeningTimesExceptionalOpenings {
	if o == nil || IsNil(o.ExceptionalClosings) {
		var ret LocationsDataOpeningTimesExceptionalOpenings
		return ret
	}
	return *o.ExceptionalClosings
}

// GetExceptionalClosingsOk returns a tuple with the ExceptionalClosings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocationsDataOpeningTimes) GetExceptionalClosingsOk() (*LocationsDataOpeningTimesExceptionalOpenings, bool) {
	if o == nil || IsNil(o.ExceptionalClosings) {
		return nil, false
	}
	return o.ExceptionalClosings, true
}

// HasExceptionalClosings returns a boolean if a field has been set.
func (o *LocationsDataOpeningTimes) HasExceptionalClosings() bool {
	if o != nil && !IsNil(o.ExceptionalClosings) {
		return true
	}

	return false
}

// SetExceptionalClosings gets a reference to the given LocationsDataOpeningTimesExceptionalOpenings and assigns it to the ExceptionalClosings field.
func (o *LocationsDataOpeningTimes) SetExceptionalClosings(v LocationsDataOpeningTimesExceptionalOpenings) {
	o.ExceptionalClosings = &v
}

func (o LocationsDataOpeningTimes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LocationsDataOpeningTimes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["twentyfourseven"] = o.Twentyfourseven
	if !IsNil(o.RegularHours) {
		toSerialize["regular_hours"] = o.RegularHours
	}
	if !IsNil(o.ExceptionalOpenings) {
		toSerialize["exceptional_openings"] = o.ExceptionalOpenings
	}
	if !IsNil(o.ExceptionalClosings) {
		toSerialize["exceptional_closings"] = o.ExceptionalClosings
	}
	return toSerialize, nil
}

type NullableLocationsDataOpeningTimes struct {
	value *LocationsDataOpeningTimes
	isSet bool
}

func (v NullableLocationsDataOpeningTimes) Get() *LocationsDataOpeningTimes {
	return v.value
}

func (v *NullableLocationsDataOpeningTimes) Set(val *LocationsDataOpeningTimes) {
	v.value = val
	v.isSet = true
}

func (v NullableLocationsDataOpeningTimes) IsSet() bool {
	return v.isSet
}

func (v *NullableLocationsDataOpeningTimes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLocationsDataOpeningTimes(val *LocationsDataOpeningTimes) *NullableLocationsDataOpeningTimes {
	return &NullableLocationsDataOpeningTimes{value: val, isSet: true}
}

func (v NullableLocationsDataOpeningTimes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLocationsDataOpeningTimes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


