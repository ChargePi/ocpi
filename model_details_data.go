/*
OCPI versions module

Specification for OCPIs versions handlers

API version: 2.2.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package OCPI

import (
	"encoding/json"
)

// checks if the DetailsData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DetailsData{}

// DetailsData struct for DetailsData
type DetailsData struct {
	Version string `json:"version"`
	Endpoints *DetailsDataEndpoints `json:"endpoints,omitempty"`
}

// NewDetailsData instantiates a new DetailsData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDetailsData(version string) *DetailsData {
	this := DetailsData{}
	this.Version = version
	return &this
}

// NewDetailsDataWithDefaults instantiates a new DetailsData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDetailsDataWithDefaults() *DetailsData {
	this := DetailsData{}
	return &this
}

// GetVersion returns the Version field value
func (o *DetailsData) GetVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *DetailsData) GetVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *DetailsData) SetVersion(v string) {
	o.Version = v
}

// GetEndpoints returns the Endpoints field value if set, zero value otherwise.
func (o *DetailsData) GetEndpoints() DetailsDataEndpoints {
	if o == nil || IsNil(o.Endpoints) {
		var ret DetailsDataEndpoints
		return ret
	}
	return *o.Endpoints
}

// GetEndpointsOk returns a tuple with the Endpoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DetailsData) GetEndpointsOk() (*DetailsDataEndpoints, bool) {
	if o == nil || IsNil(o.Endpoints) {
		return nil, false
	}
	return o.Endpoints, true
}

// HasEndpoints returns a boolean if a field has been set.
func (o *DetailsData) HasEndpoints() bool {
	if o != nil && !IsNil(o.Endpoints) {
		return true
	}

	return false
}

// SetEndpoints gets a reference to the given DetailsDataEndpoints and assigns it to the Endpoints field.
func (o *DetailsData) SetEndpoints(v DetailsDataEndpoints) {
	o.Endpoints = &v
}

func (o DetailsData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DetailsData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["version"] = o.Version
	if !IsNil(o.Endpoints) {
		toSerialize["endpoints"] = o.Endpoints
	}
	return toSerialize, nil
}

type NullableDetailsData struct {
	value *DetailsData
	isSet bool
}

func (v NullableDetailsData) Get() *DetailsData {
	return v.value
}

func (v *NullableDetailsData) Set(val *DetailsData) {
	v.value = val
	v.isSet = true
}

func (v NullableDetailsData) IsSet() bool {
	return v.isSet
}

func (v *NullableDetailsData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDetailsData(val *DetailsData) *NullableDetailsData {
	return &NullableDetailsData{value: val, isSet: true}
}

func (v NullableDetailsData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDetailsData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


