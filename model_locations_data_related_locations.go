/*
OCPI locations module

Specification for OCPIs locations handlers

API version: 2.2.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package OCPI

import (
	"encoding/json"
)

// checks if the LocationsDataRelatedLocations type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LocationsDataRelatedLocations{}

// LocationsDataRelatedLocations struct for LocationsDataRelatedLocations
type LocationsDataRelatedLocations struct {
	Latitude string `json:"latitude"`
	Longitude string `json:"longitude"`
	Name *LocationsDataRelatedLocationsName `json:"name,omitempty"`
}

// NewLocationsDataRelatedLocations instantiates a new LocationsDataRelatedLocations object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLocationsDataRelatedLocations(latitude string, longitude string) *LocationsDataRelatedLocations {
	this := LocationsDataRelatedLocations{}
	this.Latitude = latitude
	this.Longitude = longitude
	return &this
}

// NewLocationsDataRelatedLocationsWithDefaults instantiates a new LocationsDataRelatedLocations object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLocationsDataRelatedLocationsWithDefaults() *LocationsDataRelatedLocations {
	this := LocationsDataRelatedLocations{}
	return &this
}

// GetLatitude returns the Latitude field value
func (o *LocationsDataRelatedLocations) GetLatitude() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Latitude
}

// GetLatitudeOk returns a tuple with the Latitude field value
// and a boolean to check if the value has been set.
func (o *LocationsDataRelatedLocations) GetLatitudeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Latitude, true
}

// SetLatitude sets field value
func (o *LocationsDataRelatedLocations) SetLatitude(v string) {
	o.Latitude = v
}

// GetLongitude returns the Longitude field value
func (o *LocationsDataRelatedLocations) GetLongitude() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Longitude
}

// GetLongitudeOk returns a tuple with the Longitude field value
// and a boolean to check if the value has been set.
func (o *LocationsDataRelatedLocations) GetLongitudeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Longitude, true
}

// SetLongitude sets field value
func (o *LocationsDataRelatedLocations) SetLongitude(v string) {
	o.Longitude = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *LocationsDataRelatedLocations) GetName() LocationsDataRelatedLocationsName {
	if o == nil || IsNil(o.Name) {
		var ret LocationsDataRelatedLocationsName
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocationsDataRelatedLocations) GetNameOk() (*LocationsDataRelatedLocationsName, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *LocationsDataRelatedLocations) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given LocationsDataRelatedLocationsName and assigns it to the Name field.
func (o *LocationsDataRelatedLocations) SetName(v LocationsDataRelatedLocationsName) {
	o.Name = &v
}

func (o LocationsDataRelatedLocations) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LocationsDataRelatedLocations) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["latitude"] = o.Latitude
	toSerialize["longitude"] = o.Longitude
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

type NullableLocationsDataRelatedLocations struct {
	value *LocationsDataRelatedLocations
	isSet bool
}

func (v NullableLocationsDataRelatedLocations) Get() *LocationsDataRelatedLocations {
	return v.value
}

func (v *NullableLocationsDataRelatedLocations) Set(val *LocationsDataRelatedLocations) {
	v.value = val
	v.isSet = true
}

func (v NullableLocationsDataRelatedLocations) IsSet() bool {
	return v.isSet
}

func (v *NullableLocationsDataRelatedLocations) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLocationsDataRelatedLocations(val *LocationsDataRelatedLocations) *NullableLocationsDataRelatedLocations {
	return &NullableLocationsDataRelatedLocations{value: val, isSet: true}
}

func (v NullableLocationsDataRelatedLocations) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLocationsDataRelatedLocations) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


