/*
OCPI sessions module

Specification for OCPIs sessions handlers

API version: 2.2.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package OCPI

import (
	"encoding/json"
)

// checks if the SessionTotalCosts type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SessionTotalCosts{}

// SessionTotalCosts struct for SessionTotalCosts
type SessionTotalCosts struct {
	ExclVat float32 `json:"excl_vat"`
	InclVat *float32 `json:"incl_vat,omitempty"`
}

// NewSessionTotalCosts instantiates a new SessionTotalCosts object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSessionTotalCosts(exclVat float32) *SessionTotalCosts {
	this := SessionTotalCosts{}
	this.ExclVat = exclVat
	return &this
}

// NewSessionTotalCostsWithDefaults instantiates a new SessionTotalCosts object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSessionTotalCostsWithDefaults() *SessionTotalCosts {
	this := SessionTotalCosts{}
	return &this
}

// GetExclVat returns the ExclVat field value
func (o *SessionTotalCosts) GetExclVat() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.ExclVat
}

// GetExclVatOk returns a tuple with the ExclVat field value
// and a boolean to check if the value has been set.
func (o *SessionTotalCosts) GetExclVatOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExclVat, true
}

// SetExclVat sets field value
func (o *SessionTotalCosts) SetExclVat(v float32) {
	o.ExclVat = v
}

// GetInclVat returns the InclVat field value if set, zero value otherwise.
func (o *SessionTotalCosts) GetInclVat() float32 {
	if o == nil || IsNil(o.InclVat) {
		var ret float32
		return ret
	}
	return *o.InclVat
}

// GetInclVatOk returns a tuple with the InclVat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionTotalCosts) GetInclVatOk() (*float32, bool) {
	if o == nil || IsNil(o.InclVat) {
		return nil, false
	}
	return o.InclVat, true
}

// HasInclVat returns a boolean if a field has been set.
func (o *SessionTotalCosts) HasInclVat() bool {
	if o != nil && !IsNil(o.InclVat) {
		return true
	}

	return false
}

// SetInclVat gets a reference to the given float32 and assigns it to the InclVat field.
func (o *SessionTotalCosts) SetInclVat(v float32) {
	o.InclVat = &v
}

func (o SessionTotalCosts) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SessionTotalCosts) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["excl_vat"] = o.ExclVat
	if !IsNil(o.InclVat) {
		toSerialize["incl_vat"] = o.InclVat
	}
	return toSerialize, nil
}

type NullableSessionTotalCosts struct {
	value *SessionTotalCosts
	isSet bool
}

func (v NullableSessionTotalCosts) Get() *SessionTotalCosts {
	return v.value
}

func (v *NullableSessionTotalCosts) Set(val *SessionTotalCosts) {
	v.value = val
	v.isSet = true
}

func (v NullableSessionTotalCosts) IsSet() bool {
	return v.isSet
}

func (v *NullableSessionTotalCosts) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSessionTotalCosts(val *SessionTotalCosts) *NullableSessionTotalCosts {
	return &NullableSessionTotalCosts{value: val, isSet: true}
}

func (v NullableSessionTotalCosts) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSessionTotalCosts) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


