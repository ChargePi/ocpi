/*
OCPI modules

Specification for OCPIs modules handlers

API version: 2.2.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package OCPI

import (
	"encoding/json"
)

// checks if the DetailsDataEndpoints type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DetailsDataEndpoints{}

// DetailsDataEndpoints struct for DetailsDataEndpoints
type DetailsDataEndpoints struct {
	Identifier ModuleIDType `json:"identifier"`
	Role InterfaceRoleType `json:"role"`
	// URL to the endpoint.
	Url string `json:"url"`
}

// NewDetailsDataEndpoints instantiates a new DetailsDataEndpoints object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDetailsDataEndpoints(identifier ModuleIDType, role InterfaceRoleType, url string) *DetailsDataEndpoints {
	this := DetailsDataEndpoints{}
	this.Identifier = identifier
	this.Role = role
	this.Url = url
	return &this
}

// NewDetailsDataEndpointsWithDefaults instantiates a new DetailsDataEndpoints object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDetailsDataEndpointsWithDefaults() *DetailsDataEndpoints {
	this := DetailsDataEndpoints{}
	return &this
}

// GetIdentifier returns the Identifier field value
func (o *DetailsDataEndpoints) GetIdentifier() ModuleIDType {
	if o == nil {
		var ret ModuleIDType
		return ret
	}

	return o.Identifier
}

// GetIdentifierOk returns a tuple with the Identifier field value
// and a boolean to check if the value has been set.
func (o *DetailsDataEndpoints) GetIdentifierOk() (*ModuleIDType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Identifier, true
}

// SetIdentifier sets field value
func (o *DetailsDataEndpoints) SetIdentifier(v ModuleIDType) {
	o.Identifier = v
}

// GetRole returns the Role field value
func (o *DetailsDataEndpoints) GetRole() InterfaceRoleType {
	if o == nil {
		var ret InterfaceRoleType
		return ret
	}

	return o.Role
}

// GetRoleOk returns a tuple with the Role field value
// and a boolean to check if the value has been set.
func (o *DetailsDataEndpoints) GetRoleOk() (*InterfaceRoleType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Role, true
}

// SetRole sets field value
func (o *DetailsDataEndpoints) SetRole(v InterfaceRoleType) {
	o.Role = v
}

// GetUrl returns the Url field value
func (o *DetailsDataEndpoints) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *DetailsDataEndpoints) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *DetailsDataEndpoints) SetUrl(v string) {
	o.Url = v
}

func (o DetailsDataEndpoints) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DetailsDataEndpoints) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["identifier"] = o.Identifier
	toSerialize["role"] = o.Role
	toSerialize["url"] = o.Url
	return toSerialize, nil
}

type NullableDetailsDataEndpoints struct {
	value *DetailsDataEndpoints
	isSet bool
}

func (v NullableDetailsDataEndpoints) Get() *DetailsDataEndpoints {
	return v.value
}

func (v *NullableDetailsDataEndpoints) Set(val *DetailsDataEndpoints) {
	v.value = val
	v.isSet = true
}

func (v NullableDetailsDataEndpoints) IsSet() bool {
	return v.isSet
}

func (v *NullableDetailsDataEndpoints) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDetailsDataEndpoints(val *DetailsDataEndpoints) *NullableDetailsDataEndpoints {
	return &NullableDetailsDataEndpoints{value: val, isSet: true}
}

func (v NullableDetailsDataEndpoints) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDetailsDataEndpoints) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


