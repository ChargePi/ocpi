/*
OCPI tariffs module

Specification for OCPIs tariffs handlers

API version: 2.2.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package OCPI

import (
	"encoding/json"
)

// checks if the TariffTariffAltText type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TariffTariffAltText{}

// TariffTariffAltText struct for TariffTariffAltText
type TariffTariffAltText struct {
	Language string `json:"language"`
	Text string `json:"text"`
}

// NewTariffTariffAltText instantiates a new TariffTariffAltText object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTariffTariffAltText(language string, text string) *TariffTariffAltText {
	this := TariffTariffAltText{}
	this.Language = language
	this.Text = text
	return &this
}

// NewTariffTariffAltTextWithDefaults instantiates a new TariffTariffAltText object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTariffTariffAltTextWithDefaults() *TariffTariffAltText {
	this := TariffTariffAltText{}
	return &this
}

// GetLanguage returns the Language field value
func (o *TariffTariffAltText) GetLanguage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Language
}

// GetLanguageOk returns a tuple with the Language field value
// and a boolean to check if the value has been set.
func (o *TariffTariffAltText) GetLanguageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Language, true
}

// SetLanguage sets field value
func (o *TariffTariffAltText) SetLanguage(v string) {
	o.Language = v
}

// GetText returns the Text field value
func (o *TariffTariffAltText) GetText() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Text
}

// GetTextOk returns a tuple with the Text field value
// and a boolean to check if the value has been set.
func (o *TariffTariffAltText) GetTextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Text, true
}

// SetText sets field value
func (o *TariffTariffAltText) SetText(v string) {
	o.Text = v
}

func (o TariffTariffAltText) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TariffTariffAltText) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["language"] = o.Language
	toSerialize["text"] = o.Text
	return toSerialize, nil
}

type NullableTariffTariffAltText struct {
	value *TariffTariffAltText
	isSet bool
}

func (v NullableTariffTariffAltText) Get() *TariffTariffAltText {
	return v.value
}

func (v *NullableTariffTariffAltText) Set(val *TariffTariffAltText) {
	v.value = val
	v.isSet = true
}

func (v NullableTariffTariffAltText) IsSet() bool {
	return v.isSet
}

func (v *NullableTariffTariffAltText) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTariffTariffAltText(val *TariffTariffAltText) *NullableTariffTariffAltText {
	return &NullableTariffTariffAltText{value: val, isSet: true}
}

func (v NullableTariffTariffAltText) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTariffTariffAltText) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


